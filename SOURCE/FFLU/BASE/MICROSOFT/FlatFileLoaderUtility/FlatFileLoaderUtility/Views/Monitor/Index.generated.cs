#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlatFileLoaderUtility.Views.Monitor
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using FlatFileLoaderUtility.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Monitor/Index.cshtml")]
    public partial class Index : System.Web.Mvc.WebViewPage<FlatFileLoaderUtility.ViewModels.InterfaceMonitorListViewModel>
    {
        public Index()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Monitor\Index.cshtml"
  
    ViewBag.Title = "";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("JavascriptImport", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n        /**************************************************\r\n        /* Page" +
" Variables\r\n        /**************************************************/\r\n      " +
"  var autoCounter = 0; // Used to stop multiple reload attempts when checking au" +
"to-reload\r\n        var isLoading = false;\r\n        var ustatus = null;\r\n\r\n      " +
"  /**************************************************\r\n        /* Document Ready" +
"\r\n        /**************************************************/\r\n        $(docume" +
"nt).ready(function () {\r\n            // Plugin instantiation\r\n            $(\"#dd" +
"lInterfaceGroup\").chosen({ search_contains: true });\r\n            $(\"#ddlInterfa" +
"ce\").chosen({ search_contains: true });\r\n            $(\"#ddlInterfaceType\").chos" +
"en({ search_contains: true });\r\n            $(\"#ddlIcsStatus\").chosen({ search_c" +
"ontains: true });\r\n            $(\".time\").attr(\"placeholder\", \"HH:mm\").timepicke" +
"r({});\r\n            $(\".date\").attr(\"placeholder\", \"dd/MM/yyyy\").datepicker({\r\n " +
"               dateFormat: \"dd/mm/yy\"\r\n            });\r\n            $(\"#progress" +
"bar\").progressbar({\r\n                value: 0\r\n            });\r\n            $(\"#" +
"TableContainer\").jtable({\r\n                addRecordButton: $(\"#none\"),\r\n       " +
"         paging: true,\r\n                pageSize: 15,\r\n                sorting: " +
"false,\r\n                selecting: true,\r\n                multiselect: false,\r\n " +
"               selectingCheckboxes: false,\r\n                defaultDateFormat: \"" +
"dd/mm/yy\",\r\n                useReprocessRow: true,\r\n                actions: {\r\n" +
"                    listAction: \'");

            
            #line 44 "..\..\Views\Monitor\Index.cshtml"
                            Write(Url.Action("MonitorList"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    reprocess: function () {\r\n                        if ($(\"" +
".reprocess:checked\").length == 0) {\r\n                            ustatus = new U" +
"Status();\r\n                            ustatus.IsError = true;\r\n                " +
"            ustatus.Message = \"You must check the checkboxes of the interfaces y" +
"ou want to reprocess\";\r\n                            ShowResult();\r\n             " +
"               return false;\r\n                        }\r\n                       " +
" $(\"#confirmText\").text(\"Are you sure you want to reprocess the selected interfa" +
"ces?\");\r\n                        $(\"#reprocesOptions\").show();\r\n                " +
"        $(\"#dialogConfirm\").dialog({\r\n                            modal: true\r\n " +
"                       });\r\n                        return false;\r\n             " +
"       },\r\n                    selectAll: function () {\r\n                       " +
" $(\".reprocess\").attr(\"checked\", \"checked\");\r\n                    },\r\n          " +
"          selectNone: function () {\r\n                        $(\".reprocess\").rem" +
"oveAttr(\"checked\");\r\n                    }\r\n                },\r\n                " +
"fields: {\r\n                    LicsId: {\r\n                        key: true,\r\n  " +
"                      title: \"Id\",\r\n                        width: \"4%\",\r\n      " +
"                  visibility: \"fixed\"\r\n                    },\r\n                 " +
"   TraceId: {\r\n                        title: \"Trace\",\r\n                        " +
"width: \"2%\",\r\n                        visibility: \"hidden\"\r\n                    " +
"},\r\n                    UserCode: {\r\n                        title: \"User\",\r\n   " +
"                     width: \"5%\",\r\n                        visibility: \"hidden\"\r" +
"\n                    },\r\n                    InterfaceCode: {\r\n                 " +
"       title: \"Int. Code\",\r\n                        width: \"5%\",\r\n              " +
"          visibility: \"hidden\"\r\n                    },\r\n                    Inte" +
"rfaceName: {\r\n                        title: \"Int. Name\",\r\n                     " +
"   width: \"20%\",\r\n                        visibility: \"visible\"\r\n               " +
"     },\r\n                    FileName: {\r\n                        title: \"File\"," +
"\r\n                        width: \"20%\",\r\n                        visibility: \"vi" +
"sible\"\r\n                    },\r\n                    StartTimeFormatted: {\r\n     " +
"                   title: \"Start\",\r\n                        width: \"10%\",\r\n     " +
"                   visibility: \"visible\"\r\n                    },\r\n              " +
"      EndTimeFormatted: {\r\n                        title: \"End\",\r\n              " +
"          width: \"10%\",\r\n                        visibility: \"hidden\"\r\n         " +
"           },\r\n                    Status: {\r\n                        title: \"St" +
"atus\",\r\n                        width: \"11%\",\r\n                        visibilit" +
"y: \"visible\"\r\n                    },\r\n                    RecordCount: {\r\n      " +
"                  title: \"Rows\",\r\n                        width: \"3%\",\r\n        " +
"                visibility: \"visible\"\r\n                    },\r\n                 " +
"   InterfaceErrorCount: {\r\n                        title: \"Int.Err\",\r\n          " +
"              width: \"3%\",\r\n                        visibility: \"hidden\",\r\n     " +
"                   display: function (data) {\r\n                            retur" +
"n (data.record.InterfaceErrorCount == 0) ? \"0\" : data.record.InterfaceErrorCount" +
";\r\n                        }\r\n                    },\r\n                    RowErr" +
"orCount: {\r\n                        title: \"Row.Err\",\r\n                        w" +
"idth: \"3%\",\r\n                        visibility: \"hidden\",\r\n                    " +
"    display: function (data) {\r\n                            return (data.record." +
"RowErrorCount == 0) ? \"0\" : data.record.RowErrorCount;\r\n                        " +
"}\r\n                    },\r\n                    Reprocess: {\r\n                   " +
"     title: \"Reprocess\",\r\n                        width: \"1%\",\r\n                " +
"        visibility: \"visible\",\r\n                        display: function (data)" +
" {\r\n                            if (data.record.HasProcessAccess) {\r\n           " +
"                     return $(\"<input type=\'hidden\' class=\'licsId\' value=\'\" + da" +
"ta.record.LicsId + \"\' /><input type=\'hidden\' class=\'interfaceCode\' value=\'\" + da" +
"ta.record.InterfaceCode + \"\' /><input type=\'checkbox\' id=\'chkReprocess\' class=\'r" +
"eprocess\' />\");\r\n                            }\r\n                            else" +
" {\r\n                                return \"\";\r\n                            }\r\n " +
"                       }\r\n                    }\r\n                },\r\n           " +
"     selectionChanged: function () {\r\n                    //Get selected rows\r\n " +
"                   var $selectedRows = $(\"#TableContainer\").jtable(\"selectedRows" +
"\");\r\n\r\n                    if ($selectedRows.length == 1) {\r\n                   " +
"     $selectedRows.each(function () {\r\n                            var record = " +
"$(this).data(\"record\");\r\n                            window.location.href = \'");

            
            #line 156 "..\..\Views\Monitor\Index.cshtml"
                                               Write(Url.Action("View/", "Monitor"));

            
            #line default
            #line hidden
WriteLiteral("\' + record.LicsId;\r\n                        });\r\n                    }\r\n         " +
"       },\r\n                recordsLoaded: function (event, data) {\r\n            " +
"        isLoading = false;\r\n                    if ($(\"#autoOn\").hasClass(\"optio" +
"n-selected\")) {\r\n                        setTimeout(\"loadResults(\" + autoCounter" +
" + \", 1);\", 10000);\r\n                    }\r\n                    $(\"#TableContain" +
"er tbody td:last-child\").click(function (event) {\r\n                        event" +
".stopPropagation();\r\n                    });\r\n                    $(\"#TableConta" +
"iner tbody tr:not(.reprocessRow) td:nth-child(11), #TableContainer tbody tr:not(" +
".reprocessRow) td:nth-child(12)\").each(function () {\r\n                        va" +
"r $this = $(this);\r\n                        if ($this.text() != \"0\") {\r\n        " +
"                    $this.parent().addClass(\"red\");\r\n                        }\r\n" +
"                    });\r\n                }\r\n            });\r\n\r\n            // Ev" +
"ent Listeners\r\n            $(\"#ddlInterfaceGroup\").change(function () {\r\n       " +
"         GetInterfaceOptions($(this).val(), $(\"#ddlInterfaceType\").val(), $(\"#dd" +
"lInterface\"), false, true);\r\n            });\r\n\r\n            $(\"#ddlInterfaceType" +
"\").change(function () {\r\n                GetInterfaceOptions($(\"#ddlInterfaceGro" +
"up\").val(), $(this).val(), $(\"#ddlInterface\"), false, true);\r\n            });\r\n " +
"           $(\".filtering input\").keypress(function (e) {\r\n                if (e." +
"which == 13) {\r\n                    e.preventDefault();\r\n                    $(\"" +
"#btnFilter\").click();\r\n                }\r\n            });\r\n\r\n            $(\"#can" +
"cel\").click(function () {\r\n                $(\".ui-dialog-content\").dialog(\"destr" +
"oy\");\r\n            });\r\n\r\n            $(\"#btnFilter\").click(function (e) {\r\n    " +
"            // Re-load records when user click \'load records\' button.\r\n         " +
"       e.preventDefault();\r\n                loadResults(autoCounter, 0);\r\n      " +
"      });\r\n\r\n            $(\"#reprocess\").click(function () {\r\n                //" +
" First, disable the form so that the user can\'t click the button again\r\n        " +
"        $(\":input\").attr(\"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n    " +
"            $(\"#reprocesOptions\").hide();\r\n                $(\"#confirmText\").tex" +
"t(\"Starting reprocess of interface(s)\");\r\n\r\n                ustatus = new UStatu" +
"s();\r\n\r\n                // Please read comments in controller before passing jud" +
"gement on this diabolical mess... :(\r\n                var ids = \"\";\r\n           " +
"     var codes = \"\";\r\n                $(\".reprocess:checked\").each(function () {" +
"\r\n                    ids += $(this).closest(\"td\").find(\".licsId\").val() + \",\";\r" +
"\n                    codes += $(this).closest(\"td\").find(\".interfaceCode\").val()" +
" + \",\";\r\n                });\r\n\r\n                $.ajax({\r\n                    ty" +
"pe: \"post\",\r\n                    url: \"/Monitor/ReprocessList\",\r\n               " +
"     contentType: \"application/json; charset=utf-8\",\r\n                    data: " +
"JSON.stringify({\r\n                        licsIds: ids,\r\n                       " +
" interfaceCodes: codes\r\n                    }),\r\n                    async: true" +
",\r\n                    success: function (response) {\r\n                        i" +
"f (response.Result != \"OK\") {\r\n                            ustatus.Message = \"Er" +
"ror while resubmitting the interface(s).\";\r\n                            ustatus." +
"Exception = response.Message;\r\n                            ustatus.IsError = tru" +
"e;\r\n                            ShowResult();\r\n                        }\r\n      " +
"                  else {\r\n                            ustatus.Message = \"Success" +
"\";\r\n                            ustatus.Exception = \"The interface(s) have been " +
"resubmitted.\";\r\n                            ShowResult();\r\n                     " +
"   }\r\n                    },\r\n                    error: function (xhr, ajaxOpti" +
"ons, thrownError) {\r\n                        ustatus.Message = \"Error communicat" +
"ing with server.\";\r\n                        ustatus.Exception = (isTest) ? throw" +
"nError : \"\";\r\n                        ustatus.IsError = true;\r\n                 " +
"       ShowResult();\r\n                    }\r\n                });\r\n            })" +
";\r\n\r\n            $(\".chzn-search input\").on(\"keypress\", function (e) {\r\n        " +
"        if (e.keyCode == 13) {\r\n                    alert(\"enter pressed\");\r\n   " +
"                 e.preventDefault();\r\n                    return false;\r\n       " +
"         }\r\n            });\r\n\r\n            // Document ready actions\r\n          " +
"  //Load all records when page is first shown\r\n");

            
            #line 259 "..\..\Views\Monitor\Index.cshtml"
            
            
            #line default
            #line hidden
            
            #line 259 "..\..\Views\Monitor\Index.cshtml"
             if (ViewBag.Connection != null)
            {

            
            #line default
            #line hidden
WriteLiteral("                ");

WriteLiteral(@"
                $(""#perPage li"").click(function () {
                    $(""#perPage li"").removeClass(""option-selected"");
                    $(this).addClass(""option-selected"");
                    $(""#TableContainer"").jtable(""option"", ""pageSize"", $(this).text());
                });
                
                $(""#autoRefresh li"").click(function () {
                    $(""#autoRefresh li"").removeClass(""option-selected"");
                    $(this).addClass(""option-selected"");
                    if ($(""#autoOn"").hasClass(""option-selected"")) {
                        autoCounter++;
                        loadResults(autoCounter, 0);
                    }
                });

                $(""#btnFilter"").click(); 
                ");

WriteLiteral("\r\n");

            
            #line 279 "..\..\Views\Monitor\Index.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        });\r\n\r\n        /**************************************************\r\n     " +
"   /* Page Functions\r\n        /*************************************************" +
"*/\r\n\r\n        // Called to retrieve the monitor records and load them into the t" +
"able\r\n        function loadResults(counter, isAuto) {\r\n\r\n            // There co" +
"uld have been an async request underway when the autorefresh checkbox was checke" +
"d\r\n            // Which would result in multiple requests. This check will ensur" +
"e that only the \"current\" series\r\n            // of auto-requests is processed.\r" +
"\n            if (counter != autoCounter || isLoading || (isAuto == 1 && !$(\"#aut" +
"oOn\").hasClass(\"option-selected\")))\r\n                return;\r\n\r\n            isLo" +
"ading = true;\r\n\r\n            var startDate = $(\"#txtStartDate\").datepicker(\"getD" +
"ate\");\r\n            var startTime = $(\"#txtStartTime\").val();\r\n            if (s" +
"tartDate != null && startTime != \"\") {\r\n                var startParts = startTi" +
"me.split(\":\");\r\n                startDate.setHours(parseInt(startParts[0]));\r\n  " +
"              startDate.setMinutes(parseInt(startParts[1]));\r\n            }\r\n\r\n " +
"           var endDate = $(\"#txtEndDate\").datepicker(\"getDate\");\r\n            va" +
"r endTime = $(\"#txtEndTime\").val();\r\n            if (endDate != null && endTime " +
"!= \"\") {\r\n                var endParts = endTime.split(\":\");\r\n                en" +
"dDate.setHours(parseInt(endParts[0]));\r\n                endDate.setMinutes(parse" +
"Int(endParts[1]));\r\n            }\r\n\r\n            $(\"#TableContainer\").jtable(\"lo" +
"ad\", {\r\n                interfaceGroupCode: $(\"#ddlInterfaceGroup\").val(),\r\n    " +
"            interfaceTypeCode: $(\"#ddlInterfaceType\").val(),\r\n                in" +
"terfaceCode: $(\"#ddlInterface\").val(),\r\n                licsId: $(\"#txtLicsId\")." +
"val(),\r\n                icsStatusCode: $(\"#ddlIcsStatus\").val(),\r\n              " +
"  startDate: startDate,\r\n                endDate: endDate\r\n            });\r\n    " +
"    }\r\n\r\n        // Called to show the result of an operation\r\n        function " +
"ShowResult() {\r\n            // Re-enable the form underneath the dialog\r\n       " +
"     $(\":input\").removeAttr(\"disabled\").trigger(\"liszt:updated\");\r\n\r\n           " +
" // Remove any existing progress bars or dialog windows\r\n            $(\".ui-dial" +
"og-content\").dialog(\"destroy\");\r\n\r\n            // Set the message an exception t" +
"ext\r\n            $(\"#pMessage\").text(ustatus.Message);\r\n            if (ustatus." +
"Exception != \"\") {\r\n                $(\"#pException\").text(ustatus.Exception);\r\n " +
"               $(\"#pException\").show();\r\n            }\r\n            else {\r\n    " +
"            $(\"#pException\").hide();\r\n            }\r\n\r\n            // Show the d" +
"ialog\r\n            $(\"#dialogMessage\").dialog({\r\n                modal: true,\r\n " +
"               title: (ustatus.IsError) ? \"Error\" : \"Message\",\r\n                " +
"buttons: {\r\n                    Ok: function () {\r\n                        $(thi" +
"s).dialog(\"close\");\r\n                        if (!ustatus.IsError)\r\n            " +
"                $(\"#TableContainer\").jtable(\"reload\");\r\n                    }\r\n " +
"               }\r\n            });\r\n        }\r\n\r\n    </script>\r\n");

});

WriteLiteral("\r\n<div");

WriteLiteral(" class=\"filtering\"");

WriteLiteral(">\r\n    <table");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" cellspacing=\"1\"");

WriteLiteral(">\r\n        <tbody>\r\n            <tr>\r\n                <td><label");

WriteLiteral(" for=\"ddlInterfaceType\"");

WriteLiteral(">Interface type</label></td>\r\n                <td");

WriteLiteral(" style=\"width:420px;\"");

WriteLiteral(">");

            
            #line 364 "..\..\Views\Monitor\Index.cshtml"
                                    Write(Html.DropDownList("ddlInterfaceType", Model.InterfaceTypes, new { id = "ddlInterfaceType", style = "width:420px" }));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td><label");

WriteLiteral(" for=\"ddlIcsStatus\"");

WriteLiteral(">Status</label></td>\r\n                <td");

WriteLiteral(" colspan=\"3\"");

WriteLiteral(">");

            
            #line 366 "..\..\Views\Monitor\Index.cshtml"
                           Write(Html.DropDownList("ddlIcsStatus", Model.IcsStatuses, new { id = "ddlIcsStatus", style = "width:341px" }));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            </tr>\r\n            <tr>\r\n                <td><label");

WriteLiteral(" for=\"ddlInterfaceGroup\"");

WriteLiteral(">Interface group</label></td>\r\n                <td>");

            
            #line 370 "..\..\Views\Monitor\Index.cshtml"
               Write(Html.DropDownList("ddlInterfaceGroup", Model.InterfaceGroups, new { id = "ddlInterfaceGroup", style="width:420px" }));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td><label");

WriteLiteral(" for=\"txtStartDate\"");

WriteLiteral(">Start/End</label></td>\r\n                <td");

WriteLiteral(" style=\"width:160px;white-space:nowrap;\"");

WriteLiteral("><input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" name=\"txtStartDate\"");

WriteLiteral(" id=\"txtStartDate\"");

WriteLiteral(" class=\"date\"");

WriteLiteral(" /><input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtStartTime\"");

WriteLiteral(" class=\"time\"");

WriteLiteral(" /><img");

WriteLiteral(" alt=\"\"");

WriteLiteral(" src=\"/content/images/filter-arrow.png\"");

WriteLiteral(" height=\"18\"");

WriteLiteral(" width=\"10\"");

WriteLiteral(" /></td>\r\n                <td");

WriteLiteral(" style=\"width:160px;white-space:nowrap;\"");

WriteLiteral("><input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" name=\"txtEndDate\"");

WriteLiteral(" id=\"txtEndDate\"");

WriteLiteral(" class=\"date\"");

WriteLiteral(" /><input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"txtEndTime\"");

WriteLiteral(" class=\"time\"");

WriteLiteral(" /></td>\r\n            </tr>\r\n            <tr>\r\n                <td><label");

WriteLiteral(" for=\"ddlInterface\"");

WriteLiteral(">Interface</label></td>\r\n                <td>");

            
            #line 377 "..\..\Views\Monitor\Index.cshtml"
               Write(Html.DropDownList("ddlInterface", Model.Interfaces, new { id = "ddlInterface", style = "width:420px" }));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td><label");

WriteLiteral(" for=\"txtLicsId\"");

WriteLiteral(">Interface ID</label></td>\r\n                <td><input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" name=\"txtLicsId\"");

WriteLiteral(" id=\"txtLicsId\"");

WriteLiteral(" /></td>\r\n                <td><button");

WriteLiteral(" type=\"button\"");

WriteLiteral(" id=\"btnFilter\"");

WriteLiteral(">Filter</button></td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r" +
"\n\r\n<h3");

WriteLiteral(" id=\"jtable-result-count\"");

WriteLiteral(">&nbsp;</h3>\r\n\r\n<div");

WriteLiteral(" id=\"perpage-panel\"");

WriteLiteral(">\r\n    <h4>Results per Page:</h4>\r\n    <ul");

WriteLiteral(" class=\"option-group\"");

WriteLiteral(" id=\"perPage\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" class=\"option-selected\"");

WriteLiteral(">15</li>\r\n        <li>25</li>\r\n        <li>50</li>\r\n        <li>100</li>\r\n       " +
" <li>250</li>\r\n    </ul>\r\n</div>\r\n\r\n<div");

WriteLiteral(" id=\"refresh-panel\"");

WriteLiteral(">\r\n    <h4>Auto refresh:</h4>\r\n    <ul");

WriteLiteral(" class=\"option-group\"");

WriteLiteral(" id=\"autoRefresh\"");

WriteLiteral(">\r\n        <li");

WriteLiteral(" id=\"autoOff\"");

WriteLiteral(" class=\"option-selected\"");

WriteLiteral(">Off</li>\r\n        <li");

WriteLiteral(" id=\"autoOn\"");

WriteLiteral(">On</li>\r\n    </ul>\r\n</div>\r\n\r\n<div");

WriteLiteral(" id=\"TableContainer\"");

WriteLiteral(">\r\n</div>\r\n<br />\r\n<div");

WriteLiteral(" id=\"dialogConfirm\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n    <p");

WriteLiteral(" id=\"confirmText\"");

WriteLiteral(">Are you sure you want to reprocess the selected interfaces?</p>\r\n    <br />\r\n   " +
" <center");

WriteLiteral(" id=\"reprocesOptions\"");

WriteLiteral(">\r\n        <button");

WriteLiteral(" id=\"reprocess\"");

WriteLiteral(">Reprocess</button>\r\n        &nbsp;\r\n        &nbsp;\r\n        <button");

WriteLiteral(" id=\"cancel\"");

WriteLiteral(">Cancel</button>\r\n    </center>\r\n    <br />\r\n</div>\r\n<div");

WriteLiteral(" id=\"dialogMessage\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n    <strong><p");

WriteLiteral(" id=\"pMessage\"");

WriteLiteral("></p></strong>\r\n    <p");

WriteLiteral(" id=\"pException\"");

WriteLiteral("></p>\r\n</div>");

        }
    }
}
#pragma warning restore 1591
