#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlatFileLoaderUtility.Views.Monitor
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using FlatFileLoaderUtility.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Monitor/View.cshtml")]
    public partial class View : System.Web.Mvc.WebViewPage<FlatFileLoaderUtility.ViewModels.InterfaceMonitorDetailViewModel>
    {
        public View()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Monitor\View.cshtml"
  
    ViewBag.Title = "Interface Detail";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("JavascriptImport", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n        /**************************************************\r\n        /* Page" +
" Variables\r\n        /**************************************************/\r\n      " +
"  var ustatus = null;\r\n        var continueMonitoring = true;\r\n        var licsI" +
"d = ");

            
            #line 15 "..\..\Views\Monitor\View.cshtml"
                Write(Model.Record.LicsId);

            
            #line default
            #line hidden
WriteLiteral(@";

        /**************************************************
        /* Document Ready
        /**************************************************/
        $(document).ready(function () {
            // Plugin instantiation
            $(""#progressbar"").progressbar({
                value: 0
            });
            $(""#RowDataTableContainer"").jtable({
                addRecordButton: $(""#none""),
                paging: true,
                pageSize: 15,
                sorting: false,
                selecting: true,
                multiselect: false,
                selectingCheckboxes: false,
                defaultDateFormat: ""dd/mm/yy"",
                messages: {
                    pagingInfo: ""( {0}-{1} of {2} records )""
                },
                //jqueryuitheme: true,
                actions: {
                    listAction: '");

            
            #line 39 "..\..\Views\Monitor\View.cshtml"
                            Write(Url.Action("RowDataList"));

            
            #line default
            #line hidden
WriteLiteral("\'\r\n                },\r\n                fields: {\r\n                    Row: {\r\n   " +
"                     key: true,\r\n                        title: \"Row\",\r\n        " +
"                width: \"4%\",\r\n                        display: function (data) {" +
"\r\n                            if (data.record.Row == 0)\r\n                       " +
"         return $(\"<pre class=\'colcount block\'> </pre>\");\r\n                     " +
"       else\r\n                                return $(\"<div class=\'spacing leftE" +
"dge rightEdge\'>\" + data.record.Row + \"</div>\");\r\n                        }\r\n    " +
"                },\r\n                    ErrorCount: {\r\n                        t" +
"itle: \"Errors\",\r\n                        width: \"4%\",\r\n                        d" +
"isplay: function (data) {\r\n                            if (data.record.Row == 0)" +
"\r\n                                return $(\"<pre class=\'colcount block\'> </pre>\"" +
");\r\n                            else if (data.record.Errors.length == 0)\r\n      " +
"                          return $(\"<div class=\'spacing\'>0</div>\");\r\n           " +
"                 else {\r\n                                var x = 0;\r\n           " +
"                     var aryHtml = new Array();\r\n                               " +
" aryHtml[x++] = \"<div class=\'tooltip\'><div class=\'jtable-main-container\'><table " +
"class=\'interfaceErrorTable jtable\'><thead><tr><th class=\'jtable-column-header\'>E" +
"rror</th><th class=\'jtable-column-header\'>Label</th><th class=\'jtable-column-hea" +
"der\'>Value</th><th class=\'jtable-column-header\'>Message</th></tr></thead><tbody>" +
"\";\r\n                                for (var i = 0; i < data.record.Errors.lengt" +
"h; i++) {\r\n                                    aryHtml[x++] = \"<tr class=\'\";\r\n  " +
"                                  aryHtml[x++] = ((i % 2) == 0) ? \"jtable-row-ev" +
"en\" : \"\";\r\n                                    aryHtml[x++] = \"\'><td>\";\r\n       " +
"                             aryHtml[x++] = data.record.Errors[i].Sequence;\r\n   " +
"                                 aryHtml[x++] = \"</td><td>\";\r\n                  " +
"                  aryHtml[x++] = data.record.Errors[i].Label;\r\n                 " +
"                   aryHtml[x++] = \"</td><td>\";\r\n                                " +
"    aryHtml[x++] = data.record.Errors[i].Value;\r\n                               " +
"     aryHtml[x++] = \"</td><td><pre class=\'exception\'>\";\r\n                       " +
"             aryHtml[x++] = data.record.Errors[i].Message;\r\n                    " +
"                aryHtml[x++] = \"<pre></td></tr>\";\r\n                             " +
"   }\r\n                                aryHtml[x++] = \"</tbody></table><div class" +
"=\'jtable-bottom-panel\'></div><br /></div></div>\";\r\n                             " +
"   return $(\"<div class=\'spacing tooltipErrors hasErrors\'>\" + data.record.Errors" +
".length + \"</div>\" + aryHtml.join(\'\'));\r\n                            }\r\n        " +
"                }\r\n                    },\r\n");

            
            #line 83 "..\..\Views\Monitor\View.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 83 "..\..\Views\Monitor\View.cshtml"
                     if (Model.Record.FileType != "csv" && Model.Record.FileType != "tab") {

            
            #line default
            #line hidden
WriteLiteral("                        ");

WriteLiteral(@"
                        Data: {
                            title: ""Data"",
                            width: ""90%"",
                            display: function (data) {
                                var rowErrors = new Array();
                                for (var i = 0; i < data.record.Errors.length; i++) {
                                    if (data.record.Errors[i].Length > 0)
                                        rowErrors.push(data.record.Errors[i]);
                                }
                                if (rowErrors.length == 0) {
                                    return $(""<pre");

WriteLiteral(" class=\'leftEdge rightEdge \" + ((data.record.Row == 0) ? \"colcount\" : \"\") + \"\'");

WriteLiteral(@">"" + data.record.Data + ""</pre>"");
                                }
                                else {
                                    var index = 0;
                                    var x = 0;
                                    var aryHtml = new Array();
                                    var needsLeftEdge = true;
                                    for (var i = 0; i < rowErrors.length; i++) {
                                        var error = rowErrors[i];
                                        if (error.Position - 1 > index) {
                                            aryHtml[x++] = ""<pre");

WriteLiteral(" class=\'\" + (needsLeftEdge ? \"leftEdge\" : \"\") + ((data.record.Row == 0) ? \" colco" +
"unt\" : \"\") + \"\'");

WriteLiteral(@">"" + data.record.Data.substring(index, error.Position - 1) + ""</pre>"";
                                            index = error.Position - 1;
                                            needsLeftEdge = false;
                                        }
                                        aryHtml[x++] = ""<pre");

WriteLiteral(" class=\'tooltipErrors highlight \" + (index + error.Length == data.record.Data.len" +
"gth - 1 ? \" rightEdge\" : \"\") + (needsLeftEdge ? \" leftEdge\" : \"\") + ((data.recor" +
"d.Row == 0) ? \" colcount\" : \"\") + \"\'");

WriteLiteral(">\" + data.record.Data.substring(index, error.Position - 1 + error.Length) + \"</pr" +
"e>\";\r\n                                        aryHtml[x++] = \"<div");

WriteLiteral(" class=\'tooltip\'");

WriteLiteral("><div");

WriteLiteral(" class=\'jtable-main-container\'");

WriteLiteral("><table");

WriteLiteral(" class=\'interfaceErrorTable jtable\'");

WriteLiteral("><thead><tr><th");

WriteLiteral(" class=\'jtable-column-header\'");

WriteLiteral(">Error</th><th");

WriteLiteral(" class=\'jtable-column-header\'");

WriteLiteral(">Label</th><th");

WriteLiteral(" class=\'jtable-column-header\'");

WriteLiteral(">Value</th><th");

WriteLiteral(" class=\'jtable-column-header\'");

WriteLiteral(">Message</th></tr></thead><tbody>\";\r\n                                        whil" +
"e (true) {\r\n                                            aryHtml[x++] = \"<tr");

WriteLiteral(" class=\'\";\r\n                                            aryHtml[x++] = ((i % 2) =" +
"= 0) ? \"jtable-row-even\" : \"\";\r\n                                            aryH" +
"tml[x++] = \"\'");

WriteLiteral(@"><td>"";
                                            aryHtml[x++] = rowErrors[i].Sequence;
                                            aryHtml[x++] = ""</td><td>"";
                                            aryHtml[x++] = rowErrors[i].Label;
                                            aryHtml[x++] = ""</td><td>"";
                                            aryHtml[x++] = rowErrors[i].Value;
                                            aryHtml[x++] = ""</td><td><pre");

WriteLiteral(" class=\'exception\'");

WriteLiteral(">\";\r\n                                            aryHtml[x++] = rowErrors[i].Mess" +
"age;\r\n                                            aryHtml[x++] = \"<pre></td></tr" +
">\";\r\n                                            // There could be multiple erro" +
"rs for the same block\r\n                                            // Peek ahead" +
". If the next error is for the same position, print it too and increment the ind" +
"ex\r\n                                            if (i < rowErrors.length - 1) {\r" +
"\n                                                if (rowErrors[i + 1].Position =" +
" error.Position)\r\n                                                    i++;\r\n    " +
"                                            else\r\n                              " +
"                      break;\r\n                                            }\r\n   " +
"                                         else {\r\n                               " +
"                 break;\r\n                                            }\r\n        " +
"                                }\r\n                                        aryHt" +
"ml[x++] = \"</tbody></table><div class=\'jtable-bottom-panel\'></div><br /></div></" +
"div>\";\r\n                                        index = error.Position - 1 + err" +
"or.Length;\r\n                                        needsLeftEdge = false;\r\n    " +
"                                }\r\n                                    // The li" +
"ne still needs to be finished\r\n                                    if (index < d" +
"ata.record.Data.length) {\r\n                                        aryHtml[x++] " +
"= \"<pre class=\'rightEdge \" + ((data.record.Row == 0) ? \" colcount\" : \"\") + \"\'>\" " +
"+ data.record.Data.substring(index) + \"</pre>\";\r\n                               " +
"     }\r\n                                    return aryHtml.join(\'\');\r\n          " +
"                      }\r\n                            }\r\n                        " +
"}\r\n                        ");

WriteLiteral("\r\n");

            
            #line 148 "..\..\Views\Monitor\View.cshtml"
                    }
                    else {
                        for (var i = 0; i < @Model.ColumnCount; i++) { 

            
            #line default
            #line hidden
WriteLiteral("                            ");

WriteLiteral("\r\n                            Col");

            
            #line 152 "..\..\Views\Monitor\View.cshtml"
                           Write(i + 1);

            
            #line default
            #line hidden
WriteLiteral(": {\r\n                                title: \"Col");

            
            #line 153 "..\..\Views\Monitor\View.cshtml"
                                       Write(i + 1);

            
            #line default
            #line hidden
WriteLiteral("\",\r\n                                width: \"");

            
            #line 154 "..\..\Views\Monitor\View.cshtml"
                                    Write(90 / (Model.ColumnCount + 1));

            
            #line default
            #line hidden
WriteLiteral(@"%"",
                                display: function (data) {
                                    // Check if there are any errors for this column
                                    var colErrors = new Array();
                                    for (var i = 0; i < data.record.Errors.length; i++) {
                                        if (data.record.Errors[i].Position == ");

            
            #line 159 "..\..\Views\Monitor\View.cshtml"
                                                                          Write(i + 1);

            
            #line default
            #line hidden
WriteLiteral(@")
                                            colErrors.push(data.record.Errors[i]);
                                    }
                                    if (colErrors.length == 0) {
                                        return $(""<div class='spacing'>"" + data.record.ColumnData[");

            
            #line 163 "..\..\Views\Monitor\View.cshtml"
                                                                                             Write(i);

            
            #line default
            #line hidden
WriteLiteral("] + \"</div>\");\r\n                                    }\r\n                          " +
"          else {\r\n                                        var x = 0;\r\n          " +
"                              var aryHtml = new Array();\r\n                      " +
"                  aryHtml[x++] = \"<div class=\'tooltip\'><div class=\'jtable-main-c" +
"ontainer\'><table class=\'interfaceErrorTable jtable\'><thead><tr><th class=\'jtable" +
"-column-header\'>Error</th><th class=\'jtable-column-header\'>Label</th><th class=\'" +
"jtable-column-header\'>Value</th><th class=\'jtable-column-header\'>Message</th></t" +
"r></thead><tbody>\";\r\n                                        for (var i = 0; i <" +
" colErrors.length; i++) {\r\n                                            aryHtml[x" +
"++] = \"<tr class=\'\";\r\n                                            aryHtml[x++] =" +
" ((i % 2) == 0) ? \"jtable-row-even\" : \"\";\r\n                                     " +
"       aryHtml[x++] = \"\'><td>\";\r\n                                            ary" +
"Html[x++] = colErrors[i].Sequence;\r\n                                            " +
"aryHtml[x++] = \"</td><td>\";\r\n                                            aryHtml" +
"[x++] = colErrors[i].Label;\r\n                                            aryHtml" +
"[x++] = \"</td><td>\";\r\n                                            aryHtml[x++] =" +
" colErrors[i].Value;\r\n                                            aryHtml[x++] =" +
" \"</td><td><pre class=\'exception\'>\";\r\n                                          " +
"  aryHtml[x++] = colErrors[i].Message;\r\n                                        " +
"    aryHtml[x++] = \"<pre></td></tr>\";\r\n                                        }" +
"\r\n                                        aryHtml[x++] = \"</tbody></table><div c" +
"lass=\'jtable-bottom-panel\'></div><br /></div></div>\";\r\n                         " +
"               return $(\"<div class=\'spacing tooltipErrors\'>\" + data.record.Colu" +
"mnData[");

            
            #line 183 "..\..\Views\Monitor\View.cshtml"
                                                                                                           Write(i);

            
            #line default
            #line hidden
WriteLiteral("] + \"</div>\" + aryHtml.join(\'\'));\r\n                                    }\r\n       " +
"                         }\r\n                            }\r\n                     " +
"       ");

WriteLiteral("\r\n");

            
            #line 188 "..\..\Views\Monitor\View.cshtml"
                            if (i < @Model.ColumnCount - 1) {

            
            #line default
            #line hidden
WriteLiteral("                                ");

WriteLiteral(",\r\n");

            
            #line 190 "..\..\Views\Monitor\View.cshtml"
                            }
                        }
                    }

            
            #line default
            #line hidden
WriteLiteral("                },\r\n                recordsLoaded: function (event, data) {\r\n    " +
"                $(\".tooltipErrors\").each(function () {\r\n                        " +
"$(this).qtip({\r\n                            content: $(this).next(),\r\n          " +
"                  position: {\r\n\t\t                        my: \'bottom center\',\r\n\t" +
"\t                        at: \'top center\',\r\n\t\t                        target: $(" +
"this),\r\n                                viewport: $(window)\r\n\t                  " +
"      },\r\n                            style: {\r\n\t\t                        classe" +
"s: \'qtip-shadow qtip-tipped\'\r\n\t                        }\r\n                      " +
"  });\r\n                    });\r\n                }\r\n            });\r\n\r\n          " +
"  // Event Listeners\r\n            $(\".traceRow\").click(function () {\r\n          " +
"      if ($(this).hasClass(\"jtable-row-selected\") || $(\"#divLoading\").is(\":visib" +
"le\"))\r\n                    return false;\r\n\r\n                $(this).closest(\"tab" +
"le\").find(\".jtable-row-selected\").removeClass(\"jtable-row-selected\");\r\n         " +
"       $(this).addClass(\"jtable-row-selected\");\r\n                $(\":input\").att" +
"r(\"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n                $(\"#divInte" +
"rfaceDetails\").hide();\r\n                $(\"#divInterfaceErrors\").hide();\r\n      " +
"          $(\"#divLoading\").show();\r\n\r\n                ustatus = new UStatus();\r\n" +
"\r\n                $.ajax({\r\n                    type: \"post\",\r\n                 " +
"   url: \"/Monitor/GetMonitorDetails\",\r\n                    data: {\r\n            " +
"            licsId: licsId,\r\n                        traceId: $(this).find(\".tra" +
"ceId\").text()\r\n                    },\r\n                    async: true,\r\n       " +
"             success: function (response) {\r\n                        $(\"#divInte" +
"rfaceDetails\").show();\r\n                        $(\"#divLoading\").hide();\r\n\r\n    " +
"                    if (response.Result != \"OK\") {\r\n                            " +
"ustatus.Message = \"Error while retrieving details.\";\r\n                          " +
"  ustatus.Exception = response.Message;\r\n                            ustatus.IsE" +
"rror = true;\r\n                            ShowResult(false);\r\n                  " +
"      }\r\n                        else {\r\n                            $(\":input\")" +
".removeAttr(\"disabled\").trigger(\"liszt:updated\");\r\n                            \r" +
"\n                            $(\"#tdStatus\").text(response.Monitor.Status);\r\n    " +
"                        $(\"#tdTraceId\").text(response.Monitor.TraceId);\r\n       " +
"                     $(\"#tdUserCode\").text(response.Monitor.UserCode);\r\n        " +
"                    $(\"#tdRecordCount\").text(response.Monitor.RecordCount);\r\n   " +
"                         $(\"#tdFileName\").text(response.Monitor.FileName);\r\n    " +
"                        $(\"#tdStartTimeFormatted\").text(response.Monitor.StartTi" +
"meFormatted);\r\n                            $(\"#tdRowCountError\").text(response.M" +
"onitor.RowCountError);\r\n                            $(\"#tdEndTimeFormatted\").tex" +
"t(response.Monitor.EndTimeFormatted);\r\n                            $(\"#tdInterfa" +
"ceErrorCount\").text(response.Monitor.InterfaceErrorCount);\r\n\r\n                  " +
"          if (response.Monitor.InterfaceErrorCount > 0) {\r\n                     " +
"           $(\"#divInterfaceErrors tbody\").empty();\r\n                            " +
"    for (var i = 0; i < response.InterfaceErrors.length; i++) {\r\n               " +
"                     $(\"#divInterfaceErrors tbody\").append(\"<tr class=\'\" + (((i " +
"% 2) == 0) ? \"jtable-row-even\" : \"\") + \"\'><td>\" + response.InterfaceErrors[i].Se" +
"quence + \"</td><td><pre class=\'exception\'>\" + response.InterfaceErrors[i].Messag" +
"e + \"</pre></td></tr>\");\r\n                                }\r\n                   " +
"             $(\"#divInterfaceErrors\").show();\r\n                            }\r\n\r\n" +
"                            loadRowData();\r\n                        }\r\n         " +
"           },\r\n                    error: function (xhr, ajaxOptions, thrownErro" +
"r) {\r\n                        $(\"#divInterfaceDetails\").show();\r\n               " +
"         $(\"#divLoading\").hide();\r\n                        ustatus.Message = \"Er" +
"ror communicating with server.\";\r\n                        ustatus.Exception = (i" +
"sTest) ? thrownError : \"\";\r\n                        ustatus.IsError = true;\r\n   " +
"                     ShowResult(false);\r\n                    }\r\n                " +
"});\r\n            });\r\n\r\n            $(\"#errorsOnly li\").click(function () {\r\n   " +
"             var isOnBefore = $(\"#errorsOnlyOn\").hasClass(\"option-selected\");\r\n " +
"               $(\"#errorsOnly li\").removeClass(\"option-selected\");\r\n            " +
"    $(this).addClass(\"option-selected\");\r\n                var isOnNow = $(\"#erro" +
"rsOnlyOn\").hasClass(\"option-selected\");\r\n                if (isOnBefore != isOnN" +
"ow)\r\n                    loadRowData();\r\n            });\r\n\r\n            $(\"#requ" +
"estReprocess\").click(function () {\r\n                ustatus = new UStatus();\r\n  " +
"              $(\"#interfaceCode\").text(\"");

            
            #line 290 "..\..\Views\Monitor\View.cshtml"
                                     Write(Model.Record.InterfaceCode);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n                $(\"#interfaceName\").text(\"");

            
            #line 291 "..\..\Views\Monitor\View.cshtml"
                                     Write(Model.Record.InterfaceName);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n                $(\"#licsId\").text(\"");

            
            #line 292 "..\..\Views\Monitor\View.cshtml"
                              Write(Model.Record.LicsId);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n                $(\"#fileName\").text(\"");

            
            #line 293 "..\..\Views\Monitor\View.cshtml"
                                Write(Model.Record.FileName);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n                $(\"#interfaceCode\").text(\"");

            
            #line 294 "..\..\Views\Monitor\View.cshtml"
                                     Write(Model.Record.InterfaceCode);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n                $(\"#interfaceCode\").text(\"");

            
            #line 295 "..\..\Views\Monitor\View.cshtml"
                                     Write(Model.Record.InterfaceCode);

            
            #line default
            #line hidden
WriteLiteral("\");\r\n                $(\"#reprocesOptions\").show();\r\n                $(\"#rowDescri" +
"ption\").hide();\r\n                $(\"#rowTime\").hide();\r\n                $(\"#prog" +
"ressbar\").hide();\r\n                $(\"#pConfirm\").show();\r\n\r\n                $(\"" +
"#dialogConfirm\").dialog({\r\n                    modal: true,\r\n                   " +
" close: function (event, ui) {\r\n                        continueMonitoring = fal" +
"se;\r\n                        location.reload(true);\r\n                    }\r\n    " +
"            });\r\n\r\n                return false;\r\n            });\r\n\r\n           " +
" $(\"#requestRefresh\").click(function () {\r\n                location.reload(true)" +
";\r\n            });\r\n\r\n            $(\"#cancel\").click(function () {\r\n            " +
"    $(\".ui-dialog-content\").dialog(\"destroy\");\r\n            });\r\n\r\n            $" +
"(\"#reprocess\").click(function () {\r\n                // First, disable the form s" +
"o that the user can\'t click the button again\r\n                $(\":input\").attr(\"" +
"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n                $(\"#reprocesOp" +
"tions\").hide();\r\n                $(\"#description\").text(\"Starting reprocess of i" +
"nterface\");\r\n                $(\"#rowDescription\").show();\r\n                $(\"#p" +
"rogressbar\").show();\r\n                $(\"#pConfirm\").hide();\r\n\r\n                " +
"continueMonitoring = true;\r\n\r\n                $.ajax({\r\n                    type" +
": \"post\",\r\n                    url: \"/Monitor/Reprocess\",\r\n                    c" +
"ontentType: \"application/json\",\r\n                    data: JSON.stringify({\r\n   " +
"                     licsId: $(\"#licsId\").text(),\r\n                        inter" +
"faceCode: $(\"#interfaceCode\").text()\r\n                    }),\r\n                 " +
"   async: true,\r\n                    success: function (response) {\r\n           " +
"             if (response.Result != \"OK\") {\r\n                            ustatus" +
".Message = \"Error while resubmitting the interface.\";\r\n                         " +
"   ustatus.Exception = response.Message;\r\n                            ustatus.Is" +
"Error = true;\r\n                            ShowResult(false);\r\n                 " +
"       }\r\n                        else {\r\n                            $(\":input\"" +
").removeAttr(\"disabled\").trigger(\"liszt:updated\");\r\n                            " +
"if (continueMonitoring)\r\n                                ReprocessMonitor();\r\n  " +
"                      }\r\n                    },\r\n                    error: func" +
"tion (xhr, ajaxOptions, thrownError) {\r\n                        ustatus.Message " +
"= \"Error communicating with server.\";\r\n                        ustatus.Exception" +
" = (isTest) ? thrownError : \"\";\r\n                        ustatus.IsError = true;" +
"\r\n                        ShowResult(false);\r\n                    }\r\n           " +
"     });\r\n            });\r\n            \r\n            // Document ready actions\r\n" +
"");

            
            #line 364 "..\..\Views\Monitor\View.cshtml"
            
            
            #line default
            #line hidden
            
            #line 364 "..\..\Views\Monitor\View.cshtml"
             if (ViewBag.Connection != null)
            {

            
            #line default
            #line hidden
WriteLiteral("                ");

WriteLiteral("loadRowData();\r\n");

            
            #line 367 "..\..\Views\Monitor\View.cshtml"
            }

            
            #line default
            #line hidden
WriteLiteral("        });\r\n\r\n        /**************************************************\r\n     " +
"   /* Page Functions\r\n        /*************************************************" +
"*/\r\n        \r\n        // Called to load row data from the server into the table\r" +
"\n        function loadRowData() {\r\n\r\n            $(\"#RowDataTableContainer\").jta" +
"ble(\"load\", {\r\n                licsId: licsId,\r\n                traceId: $(\".tra" +
"ceRow.jtable-row-selected .traceId\").text(),\r\n                isErrorRowsOnly: $" +
"(\"#errorsOnlyOn\").hasClass(\"option-selected\")\r\n            });\r\n        }\r\n\r\n   " +
"     // Called to show the result of an operation\r\n        function ShowResult(r" +
"efreshOnClose) {\r\n            var doRefreshOnClose = refreshOnClose;\r\n          " +
"  \r\n            // Re-enable the form underneath the dialog\r\n            $(\":inp" +
"ut\").removeAttr(\"disabled\").trigger(\"liszt:updated\");\r\n\r\n            // Remove a" +
"ny existing dialog windows\r\n            $(\".ui-dialog-content\").dialog(\"destroy\"" +
");\r\n\r\n            // Set the message an exception text\r\n            $(\"#pMessage" +
"\").text(ustatus.Message);\r\n            if (ustatus.Exception != \"\") {\r\n         " +
"       $(\"#pException\").text(ustatus.Exception);\r\n                $(\"#pException" +
"\").show();\r\n            }\r\n            else {\r\n                $(\"#pException\")." +
"hide();\r\n            }\r\n\r\n            // Show the interface error count if it is" +
" available\r\n            if (ustatus.LicsId > 0) {\r\n                $(\"#rowInterf" +
"aceErrors\").show();\r\n                $(\"#interfaceErrorCount\").text(ustatus.Inte" +
"rfaceErrorCount);\r\n            }\r\n            else {\r\n                $(\"#rowInt" +
"erfaceErrors\").hide();\r\n            }\r\n\r\n            // Show the row error count" +
" if it is available\r\n            if (ustatus.LicsId > 0) {\r\n                $(\"#" +
"rowRowErrors\").show();\r\n                $(\"#rowErrorCount\").text(ustatus.RowErro" +
"rCount);\r\n            }\r\n            else {\r\n                $(\"#rowRowErrors\")." +
"hide();\r\n            }\r\n\r\n            // Show the dialog\r\n            $(\"#dialog" +
"Message\").dialog({\r\n                modal: true,\r\n                title: (ustatu" +
"s.IsError) ? \"Error\" : \"Message\",\r\n                buttons: {\r\n                 " +
"   Ok: function () {\r\n                        $(this).dialog(\"close\");\r\n        " +
"            }\r\n                },\r\n                close: function (event, ui) {" +
"\r\n                    if (doRefreshOnClose)\r\n                        location.re" +
"load(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        // Called " +
"to monitor the status of a reprocess request\r\n        function ReprocessMonitor(" +
") {\r\n\r\n            if (!continueMonitoring)\r\n                return;\r\n\r\n        " +
"    $.ajax({\r\n                type: \"post\",\r\n                url: \"/Monitor/GetS" +
"tatus\",\r\n                contentType: \"application/json\",\r\n                data:" +
" JSON.stringify({\r\n                    licsId: $(\"#licsId\").text()\r\n            " +
"    }),\r\n                async: true,\r\n                success: function (respon" +
"se) {\r\n                    if (response.Result != \"OK\") {\r\n                     " +
"   ustatus.IsError = true;\r\n                        ustatus.Message = \"Error whi" +
"le monitoring status.\"\r\n                        ustatus.Exception = response.Mes" +
"sage;\r\n                        ShowResult(true);\r\n                    }\r\n       " +
"             else {\r\n                        if (response.Total > 0 && response." +
"Current > 0)\r\n                            $(\"#progressbar\").progressbar(\"value\"," +
" response.Current * 100 / response.Total);\r\n                        $(\"#descript" +
"ion\").text(\"Processing in ICS\");\r\n                        $(\"#rowTime\").show();\r" +
"\n                        $(\"#estimatedTime\").text(response.EstimatedTime);\r\n\r\n  " +
"                      // It can be a long time on \"0\" progress...\r\n             " +
"           // To let the user know that stuff is still happening, if it\'s 0 just" +
" increment the progressbar\r\n                        if (response.Current == 0) {" +
"\r\n                            var currentValue = $(\"#progressbar\").progressbar(\"" +
"value\");\r\n                            currentValue = (currentValue == 100) ? 0 :" +
" currentValue + 5;\r\n                            $(\"#progressbar\").progressbar(\"v" +
"alue\", currentValue);\r\n                        }\r\n\r\n                        if (" +
"response.CurrentStep == 5 && response.IsComplete == true) {\r\n                   " +
"         ustatus.Message = \"Reprocess complete.\";\r\n                            u" +
"status.Exception = \"\";\r\n                            ustatus.InterfaceErrorCount " +
"= response.InterfaceErrorCount;\r\n                            ustatus.RowErrorCou" +
"nt = response.RowErrorCount;\r\n                            ShowResult(true);\r\n   " +
"                     }\r\n                        else {\r\n                        " +
"    // Wait a second before polling again\r\n                            if (conti" +
"nueMonitoring)\r\n                                setTimeout(\"ReprocessMonitor();\"" +
", 1000);\r\n                        }\r\n                    }\r\n                },\r\n" +
"                error: function (xhr, ajaxOptions, thrownError) {\r\n             " +
"       ustatus.IsError = true;\r\n                    ustatus.Message = \"Error com" +
"municating with server.\";\r\n                    ustatus.Exception = (isTest) ? th" +
"rownError : \"\";\r\n                    ShowResult(true);\r\n                }\r\n     " +
"       });\r\n        }\r\n    </script>\r\n");

});

WriteLiteral("\r\n<div");

WriteLiteral(" class=\"actions\"");

WriteLiteral(">\r\n    <h3>Actions:</h3>&nbsp;&nbsp;&nbsp;&nbsp;\r\n");

            
            #line 501 "..\..\Views\Monitor\View.cshtml"
    
            
            #line default
            #line hidden
            
            #line 501 "..\..\Views\Monitor\View.cshtml"
     if (Model.HasProcessAccess) {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral("<button id=\"requestReprocess\">Reprocess</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n");

            
            #line 503 "..\..\Views\Monitor\View.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <button");

WriteLiteral(" id=\"requestRefresh\"");

WriteLiteral(">Refresh</button>\r\n</div>\r\n\r\n\r\n<h3>Trace History</h3>\r\n<div");

WriteLiteral(" class=\"jtable-main-container\"");

WriteLiteral(">\r\n    <table");

WriteLiteral(" id=\"traceTable\"");

WriteLiteral(" class=\"jtable\"");

WriteLiteral(">\r\n        <thead>\r\n            <tr>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">Trace</th>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">User</th>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">Int. Code</th>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">Int. Name</th>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">Start</th>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">End</th>\r\n                <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">Status</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n");

            
            #line 523 "..\..\Views\Monitor\View.cshtml"
        
            
            #line default
            #line hidden
            
            #line 523 "..\..\Views\Monitor\View.cshtml"
           
            var odd = true;
            var counter = 0;
        
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 527 "..\..\Views\Monitor\View.cshtml"
        
            
            #line default
            #line hidden
            
            #line 527 "..\..\Views\Monitor\View.cshtml"
         foreach (var item in Model.Monitors)
        {

            
            #line default
            #line hidden
WriteLiteral("            <tr");

WriteAttribute("class", Tuple.Create(" class=\"", 27181), Tuple.Create("\"", 27274)
            
            #line 529 "..\..\Views\Monitor\View.cshtml"
, Tuple.Create(Tuple.Create("", 27189), Tuple.Create<System.Object, System.Int32>(odd ? "" : "jtable-row-even"
            
            #line default
            #line hidden
, 27189), false)
, Tuple.Create(Tuple.Create(" ", 27220), Tuple.Create("traceRow", 27221), true)
            
            #line 529 "..\..\Views\Monitor\View.cshtml"
, Tuple.Create(Tuple.Create(" ", 27229), Tuple.Create<System.Object, System.Int32>(counter == 0 ? "jtable-row-selected" : ""
            
            #line default
            #line hidden
, 27230), false)
);

WriteLiteral(">\r\n                <td");

WriteLiteral(" class=\"traceId\"");

WriteLiteral(">");

            
            #line 530 "..\..\Views\Monitor\View.cshtml"
                               Write(item.TraceId);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td>");

            
            #line 531 "..\..\Views\Monitor\View.cshtml"
               Write(item.UserCode);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td>");

            
            #line 532 "..\..\Views\Monitor\View.cshtml"
               Write(item.InterfaceCode);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td>");

            
            #line 533 "..\..\Views\Monitor\View.cshtml"
               Write(item.InterfaceName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td>");

            
            #line 534 "..\..\Views\Monitor\View.cshtml"
               Write(item.StartTimeFormatted);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td>");

            
            #line 535 "..\..\Views\Monitor\View.cshtml"
               Write(item.EndTimeFormatted);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td>");

            
            #line 536 "..\..\Views\Monitor\View.cshtml"
               Write(item.Status);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            </tr>\r\n");

            
            #line 538 "..\..\Views\Monitor\View.cshtml"
            odd = !odd;
            counter++;
        }

            
            #line default
            #line hidden
WriteLiteral("        </tbody>\r\n    </table>\r\n</div>\r\n<br />\r\n\r\n<div");

WriteLiteral(" id=\"divInterfaceDetails\"");

WriteLiteral(">\r\n    <h3>Trace Details</h3>\r\n    <div");

WriteLiteral(" class=\"hr\"");

WriteLiteral("></div>\r\n    <table");

WriteLiteral(" class=\"trace-details\"");

WriteLiteral(">\r\n        <tr>\r\n            <td");

WriteLiteral(" style=\"width:155px;\"");

WriteLiteral("><strong>Interface ID</strong></td>\r\n            <td");

WriteLiteral(" style=\"width:15%;\"");

WriteLiteral(">");

            
            #line 552 "..\..\Views\Monitor\View.cshtml"
                              Write(Model.Record.LicsId);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td");

WriteLiteral(" style=\"width:155px;\"");

WriteLiteral("><strong>Interface Code</strong></td>\r\n            <td");

WriteLiteral(" style=\"width:30%;\"");

WriteLiteral(">");

            
            #line 554 "..\..\Views\Monitor\View.cshtml"
                              Write(Model.Record.InterfaceCode);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td");

WriteLiteral(" style=\"width:135px;\"");

WriteLiteral("><strong>Status</strong></td>\r\n            <td");

WriteLiteral(" style=\"width:18%;\"");

WriteLiteral(" id=\"tdStatus\"");

WriteLiteral(">");

            
            #line 556 "..\..\Views\Monitor\View.cshtml"
                                            Write(Model.Record.Status);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n        </tr>\r\n        <tr>\r\n            <td><strong>Trace</strong></td>\r\n" +
"            <td");

WriteLiteral(" id=\"tdTraceId\"");

WriteLiteral(">");

            
            #line 560 "..\..\Views\Monitor\View.cshtml"
                          Write(Model.Record.TraceId);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>Interface Name</strong></td>\r\n            <td>");

            
            #line 562 "..\..\Views\Monitor\View.cshtml"
           Write(Model.Record.InterfaceName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>User Code</strong></td>\r\n            <td");

WriteLiteral(" id=\"tdUserCode\"");

WriteLiteral(">");

            
            #line 564 "..\..\Views\Monitor\View.cshtml"
                           Write(Model.Record.UserCode);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n        </tr>\r\n        <tr>\r\n            <td><strong>Record Count</strong>" +
"</td>\r\n            <td");

WriteLiteral(" id=\"tdRecordCount\"");

WriteLiteral(">");

            
            #line 568 "..\..\Views\Monitor\View.cshtml"
                              Write(Model.Record.RecordCount);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>File Name</strong></td>\r\n            <td");

WriteLiteral(" id=\"tdFileName\"");

WriteLiteral(">");

            
            #line 570 "..\..\Views\Monitor\View.cshtml"
                           Write(Model.Record.FileName);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>Start Time</strong></td>\r\n            <td");

WriteLiteral(" id=\"tdStartTimeFormatted\"");

WriteLiteral(">");

            
            #line 572 "..\..\Views\Monitor\View.cshtml"
                                     Write(Model.Record.StartTimeFormatted);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n        </tr>\r\n        <tr>\r\n            <td><strong>Row Errors</strong></" +
"td>\r\n            <td");

WriteLiteral(" id=\"tdRowCountError\"");

WriteLiteral(">");

            
            #line 576 "..\..\Views\Monitor\View.cshtml"
                                Write(Model.Record.RowErrorCount);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>File Type</strong></td>\r\n            <td>");

            
            #line 578 "..\..\Views\Monitor\View.cshtml"
           Write(Model.Record.FileType);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>End Time</strong></td>\r\n            <td");

WriteLiteral(" id=\"tdEndTimeFormatted\"");

WriteLiteral(">");

            
            #line 580 "..\..\Views\Monitor\View.cshtml"
                                   Write(Model.Record.EndTimeFormatted);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n        </tr>\r\n        <tr>\r\n            <td><strong>Interface Errors</str" +
"ong></td>\r\n            <td");

WriteLiteral(" id=\"tdInterfaceErrorCount\"");

WriteLiteral(">");

            
            #line 584 "..\..\Views\Monitor\View.cshtml"
                                      Write(Model.Record.InterfaceErrorCount);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td><strong>CSV Qualifier</strong></td>\r\n            <td>");

            
            #line 586 "..\..\Views\Monitor\View.cshtml"
           Write(Model.Record.CsvQualifier);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n            <td></td>\r\n            <td></td>\r\n        </tr>\r\n    </table>\r" +
"\n    <div");

WriteLiteral(" class=\"hr\"");

WriteLiteral("></div>\r\n    <br />\r\n\r\n\r\n    <div");

WriteLiteral(" id=\"divInterfaceErrors\"");

WriteAttribute("style", Tuple.Create(" style=\"", 29820), Tuple.Create("\"", 29903)
            
            #line 595 "..\..\Views\Monitor\View.cshtml"
, Tuple.Create(Tuple.Create("", 29828), Tuple.Create<System.Object, System.Int32>((Model.Record.InterfaceErrorCount == 0) ? "display:none;" : string.Empty
            
            #line default
            #line hidden
, 29828), false)
);

WriteLiteral(">\r\n        <h3>Interface Errors</h3>\r\n        <div");

WriteLiteral(" class=\"jtable-main-container\"");

WriteLiteral(">\r\n            <table");

WriteLiteral(" id=\"interfaceErrorTable\"");

WriteLiteral(" class=\"jtable\"");

WriteLiteral(">\r\n                <thead>\r\n                    <tr>\r\n                        <th" +
"");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(" style=\"width:10%;\"");

WriteLiteral(">Error</th>\r\n                        <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(" style=\"width:15%;\"");

WriteLiteral(">Label</th>\r\n                        <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(" style=\"width:15%;\"");

WriteLiteral(">Value</th>\r\n                        <th");

WriteLiteral(" class=\"jtable-column-header\"");

WriteLiteral(">Message</th>\r\n                    </tr>\r\n                </thead>\r\n             " +
"   <tbody>\r\n");

            
            #line 608 "..\..\Views\Monitor\View.cshtml"
                
            
            #line default
            #line hidden
            
            #line 608 "..\..\Views\Monitor\View.cshtml"
                 foreach (var item in Model.InterfaceErrors)
                {

            
            #line default
            #line hidden
WriteLiteral("                    <tr");

WriteAttribute("class", Tuple.Create(" class=\"", 30616), Tuple.Create("\"", 30655)
            
            #line 610 "..\..\Views\Monitor\View.cshtml"
, Tuple.Create(Tuple.Create("", 30624), Tuple.Create<System.Object, System.Int32>(odd ? "" : "jtable-row-even"
            
            #line default
            #line hidden
, 30624), false)
);

WriteLiteral(">\r\n                        <td>");

            
            #line 611 "..\..\Views\Monitor\View.cshtml"
                       Write(item.Sequence);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");

            
            #line 612 "..\..\Views\Monitor\View.cshtml"
                       Write(item.Label);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");

            
            #line 613 "..\..\Views\Monitor\View.cshtml"
                       Write(item.Value);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td><pre");

WriteLiteral(" class=\"exception\"");

WriteLiteral(">");

            
            #line 614 "..\..\Views\Monitor\View.cshtml"
                                              Write(item.Message);

            
            #line default
            #line hidden
WriteLiteral("</pre></td>\r\n                    </tr>\r\n");

            
            #line 616 "..\..\Views\Monitor\View.cshtml"
                    odd = !odd;
                }

            
            #line default
            #line hidden
WriteLiteral("                </tbody>\r\n            </table>\r\n        </div>\r\n        <br />\r\n " +
"   </div>\r\n\r\n    <h3>Row Data</h3>\r\n\r\n    <div");

WriteLiteral(" id=\"jtable-result-count\"");

WriteLiteral(" class=\"errorcount-panel\"");

WriteLiteral("></div>\r\n");

            
            #line 627 "..\..\Views\Monitor\View.cshtml"
    
            
            #line default
            #line hidden
            
            #line 627 "..\..\Views\Monitor\View.cshtml"
     if (Model.Record.RowErrorCount > 0)
    {

            
            #line default
            #line hidden
WriteLiteral("        <div");

WriteLiteral(" id=\"refresh-panel\"");

WriteLiteral(">\r\n            <h4>Error rows only:</h4>\r\n            <ul");

WriteLiteral(" class=\"option-group\"");

WriteLiteral(" id=\"errorsOnly\"");

WriteLiteral(">\r\n                <li");

WriteLiteral(" id=\"errorsOnlyOff\"");

WriteLiteral(" class=\"option-selected\"");

WriteLiteral(">Off</li>\r\n                <li");

WriteLiteral(" id=\"errorsOnlyOn\"");

WriteLiteral(">On</li>\r\n            </ul>\r\n        </div>\r\n");

            
            #line 636 "..\..\Views\Monitor\View.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" id=\"RowDataTableContainer\"");

WriteLiteral(">\r\n    </div>\r\n    <br />\r\n</div>\r\n\r\n<div");

WriteLiteral(" id=\"divLoading\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n    <br />\r\n    <img");

WriteLiteral(" alt=\"loading\"");

WriteLiteral(" src=\"/Scripts/jtable/themes/standard/blue/loading.gif\"");

WriteLiteral(" /> Loading...\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <" +
"br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <br />\r\n<" +
"/div>\r\n\r\n<div");

WriteLiteral(" id=\"dialogConfirm\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n    <p");

WriteLiteral(" id=\"pConfirm\"");

WriteLiteral(">Are you sure you want to reprocess this interface?</p>\r\n    <table");

WriteLiteral(" cellspacing=\"8\"");

WriteLiteral(">\r\n        <tr>\r\n            <td");

WriteLiteral(" style=\"width:100px;\"");

WriteLiteral(">Connection</td>\r\n            <td><strong>");

            
            #line 664 "..\..\Views\Monitor\View.cshtml"
                    Write((ViewBag.Connection == null) ? string.Empty : ViewBag.Connection.ConnectionName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Interface Code</td>\r" +
"\n            <td><strong");

WriteLiteral(" id=\"interfaceCode\"");

WriteLiteral("></strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Interface Name</td>" +
"\r\n            <td><strong");

WriteLiteral(" id=\"interfaceName\"");

WriteLiteral("></strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Interface ID</td>\r\n" +
"            <td><strong");

WriteLiteral(" id=\"licsId\"");

WriteLiteral("></strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>ICS User</td>\r\n    " +
"        <td><strong>");

            
            #line 680 "..\..\Views\Monitor\View.cshtml"
                   Write(ViewBag.User.UserName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Filename</td>\r\n     " +
"       <td><strong");

WriteLiteral(" id=\"fileName\"");

WriteLiteral("></strong></td>\r\n        </tr>\r\n        <tr");

WriteLiteral(" id=\"rowDescription\"");

WriteLiteral(">\r\n            <td>Description</td>\r\n            <td><strong");

WriteLiteral(" id=\"description\"");

WriteLiteral("></strong></td>\r\n        </tr>\r\n        <tr");

WriteLiteral(" id=\"rowTime\"");

WriteLiteral(">\r\n            <td>Estimated Time</td>\r\n            <td><strong");

WriteLiteral(" id=\"estimatedTime\"");

WriteLiteral("></strong></td>\r\n        </tr>\r\n    </table>\r\n    <br />\r\n    <div");

WriteLiteral(" id=\"progressbar\"");

WriteLiteral("></div>\r\n    <center");

WriteLiteral(" id=\"reprocesOptions\"");

WriteLiteral(">\r\n        <button");

WriteLiteral(" id=\"reprocess\"");

WriteLiteral(">Reprocess</button>\r\n        &nbsp;\r\n        &nbsp;\r\n        <button");

WriteLiteral(" id=\"cancel\"");

WriteLiteral(">Cancel</button>\r\n    </center>\r\n    <br />\r\n</div>\r\n<div");

WriteLiteral(" id=\"dialogMessage\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n    <strong><p");

WriteLiteral(" id=\"pMessage\"");

WriteLiteral("></p></strong>\r\n    <p");

WriteLiteral(" id=\"pException\"");

WriteLiteral("></p>\r\n    <table>\r\n        <tr");

WriteLiteral(" id=\"rowInterfaceErrors\"");

WriteLiteral(">\r\n            <td><strong>Interface Errors</strong>:</td>\r\n            <td");

WriteLiteral(" id=\"interfaceErrorCount\"");

WriteLiteral("></td>\r\n        </tr>\r\n        <tr");

WriteLiteral(" id=\"rowRowErrors\"");

WriteLiteral(">\r\n            <td><strong>Row Errors</strong>:</td>\r\n            <td");

WriteLiteral(" id=\"rowErrorCount\"");

WriteLiteral("></td>\r\n        </tr>\r\n    </table>\r\n</div>");

        }
    }
}
#pragma warning restore 1591
