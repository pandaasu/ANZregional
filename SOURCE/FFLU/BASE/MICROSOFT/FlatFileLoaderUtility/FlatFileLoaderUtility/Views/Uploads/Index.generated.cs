#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlatFileLoaderUtility.Views.Uploads
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using FlatFileLoaderUtility.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Uploads/Index.cshtml")]
    public partial class Index : System.Web.Mvc.WebViewPage<FlatFileLoaderUtility.ViewModels.FileUploadViewModel>
    {
        public Index()
        {
        }
        public override void Execute()
        {
            
            #line 3 "..\..\Views\Uploads\Index.cshtml"
  
    ViewBag.Title = "File Upload";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("JavascriptImport", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n        /**************************************************\r\n        /* Page" +
" Variables\r\n        /**************************************************/\r\n      " +
"  var ustatus = null;\r\n        var fileData = null;\r\n        var inProgressInter" +
"faceCode = \"");

            
            #line 15 "..\..\Views\Uploads\Index.cshtml"
                                  Write(Model.InterfaceCode);

            
            #line default
            #line hidden
WriteLiteral("\";\r\n        var inProgressInterfaceName = \"");

            
            #line 16 "..\..\Views\Uploads\Index.cshtml"
                                  Write(Model.InterfaceName);

            
            #line default
            #line hidden
WriteLiteral("\";\r\n        var inProgressFileName = \"");

            
            #line 17 "..\..\Views\Uploads\Index.cshtml"
                             Write(Model.FileName);

            
            #line default
            #line hidden
WriteLiteral("\";\r\n        var inProgressFileSize = ");

            
            #line 18 "..\..\Views\Uploads\Index.cshtml"
                            Write(Model.FileSize);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var inProgressLastSegment = ");

            
            #line 19 "..\..\Views\Uploads\Index.cshtml"
                               Write(Model.LastSegment);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        var isResuming = false;\r\n        var isModernBrowser = (window.File &&" +
" window.FileReader && window.Blob);\r\n        var doCancel = false;\r\n        var " +
"continueMonitoring = true;\r\n\r\n        /*****************************************" +
"*********\r\n        /* Document Ready\r\n        /*********************************" +
"*****************/\r\n        $(document).ready(function () {\r\n            // Plug" +
"in instantiation\r\n            $(\"#ddlInterfaceGroup\").chosen({ search_contains: " +
"true });\r\n            $(\"#ddlInterface\").chosen({ search_contains: true });\r\n\r\n " +
"           // Event Listeners\r\n            $(\"#ddlInterfaceGroup\").change(functi" +
"on () {\r\n                GetInterfaceOptions($(this).val(), \"*INBOUND\", $(\"#ddlI" +
"nterface\"), true, false);\r\n            });\r\n\r\n            $(\"#ddlInterface\").cha" +
"nge(function () {\r\n                $(\"#tdFileType\").html(\"\");\r\n\r\n               " +
" if ($(this).val() == \"\")\r\n                    return;\r\n\r\n                $.ajax" +
"({\r\n                    type: \"post\",\r\n                    url: \"/Base/GetInterf" +
"aceDetails\",\r\n                    data: {\r\n                        interfaceCode" +
": $(this).val()\r\n                    },\r\n                    async: true,\r\n     " +
"               success: function (response) {\r\n                        if (respo" +
"nse.Result != \"OK\") {\r\n                            $(\"#tdFileType\").html(respons" +
"e.Message);\r\n                        }\r\n                        else {\r\n        " +
"                    $(\"#tdFileType\").html(\"Expected file type: <strong>\" + respo" +
"nse.Data.FileType + \"</strong>\" + ((response.Data.FileType == \"csv\" || response." +
"Data.FileType == \"tab\") ? \", and qualifier: <strong>\" + response.Data.CsvQualifi" +
"er + \"</strong>\" : \"\"));\r\n                        }\r\n                    },\r\n   " +
"                 error: function (xhr, ajaxOptions, thrownError) {\r\n            " +
"            $(\"#tdFileType\").html(\"Expected file type for this interface could n" +
"ot be determined\");\r\n                    }\r\n                });\r\n            });" +
"\r\n\r\n            $(\"#validationForm\").validationEngine(\"attach\", {\r\n             " +
"   prettySelect : true,\r\n                useSuffix: \"_chzn\"\r\n            });\r\n\r\n" +
"            $(\"#file\").change(function () {\r\n                $(\"#fakefile\").val(" +
"$(\"#file\").val().replace(/C:\\\\fakepath\\\\/i, \'\'));\r\n                if (isModernB" +
"rowser) {\r\n                    fileData = this.files[0];\r\n                }\r\n   " +
"         });\r\n\r\n            $(\"#fakefile\").click(function () {\r\n                " +
"$(\"#file\").click();\r\n                return false;\r\n            });\r\n\r\n         " +
"   $(\"#fakefileButton\").click(function () {\r\n                $(\"#file\").click();" +
"\r\n                return false;\r\n            });\r\n\r\n            $(\"#upload\").cli" +
"ck(function () {\r\n                // Validate inputs\r\n                // This wi" +
"ll ensure that both an interface and a file have been selected\r\n                " +
"if (!$(\"#validationForm\").validationEngine(\"validate\"))\r\n                    ret" +
"urn false;\r\n\r\n                // Instantiate a Status object to hold the upload " +
"state\r\n                ustatus = new UStatus();\r\n                ustatus.Interfa" +
"ceCode = $(\"#ddlInterface\").val();\r\n                ustatus.FilePath = $(\"#file\"" +
").val().replace(/C:\\\\fakepath\\\\/i, \'\');\r\n                ustatus.FileName = usta" +
"tus.FilePath.split(\"\\\\\").pop();\r\n                ustatus.SegmentBytes = ");

            
            #line 98 "..\..\Views\Uploads\Index.cshtml"
                                  Write(ViewBag.SegmentBytes);

            
            #line default
            #line hidden
WriteLiteral(";\r\n\r\n                // The filename cannot exceed 64 characters\r\n               " +
" if (ustatus.FileName.length > 64) {\r\n                    ustatus.Message = \"The" +
" filename cannot exceed 64 characters.\";\r\n                    ustatus.IsError = " +
"true;\r\n                    ShowResult(true);\r\n                    return false;\r" +
"\n                }\r\n\r\n                // Initiate the upload.\r\n                /" +
"/ Browsers supporting HTML5 perform the file reading asynchronously\r\n           " +
"     // So this is the last function that can be called from the upload click ev" +
"enthandler\r\n                UploadInitiate();\r\n\r\n                return false;\r\n" +
"            });\r\n\r\n            $(\"#cancelUpload\").click(function () {\r\n         " +
"       $(this).attr(\"disabled\", \"disabled\");\r\n                $(\"#uploadOptions\"" +
").hide();\r\n                doCancel = true;\r\n                return false;\r\n    " +
"        });\r\n\r\n            $(\"#cancel\").click(function () {\r\n                $(\"" +
"form :input\").attr(\"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n          " +
"      $(\"#resumeOptions\").hide();\r\n                $(\"#rowDescriptionResume\").sh" +
"ow();\r\n                UploadCancel(false);\r\n                return false;\r\n    " +
"        });\r\n\r\n            $(\"#resume\").click(function () {\r\n                $(\"" +
"#ddlInterface\").val(inProgressInterfaceCode);\r\n                $(\"#ddlInterface\"" +
").attr(\"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n                $(\"#dd" +
"lInterfaceGroup\").attr(\"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n      " +
"          $(\".ui-dialog-content\").dialog(\"destroy\");\r\n                $(\"#file\")" +
".click();\r\n                isResuming = true;\r\n                return false;\r\n  " +
"          });\r\n\r\n            // Document ready actions\r\n            if (inProgre" +
"ssInterfaceCode != \"\") {\r\n                $(\"#dialogResume\").dialog({\r\n         " +
"           modal: true\r\n                });\r\n            }\r\n        });\r\n\r\n     " +
"   /**************************************************\r\n        /* Page Function" +
"s\r\n        /**************************************************/\r\n        \r\n     " +
"   // Called to cancel an upload\r\n        function UploadCancel(silentCancel) {\r" +
"\n            var doSilentCancel = silentCancel;\r\n            $.ajax({\r\n         " +
"       type: \"post\",\r\n                url: \"/Uploads/Cancel\",\r\n                c" +
"ontentType: \"application/json\",\r\n                async: true,\r\n                s" +
"uccess: function (response) {\r\n                    if (doSilentCancel)\r\n        " +
"                return;\r\n                    if (response.Result != \"OK\") {\r\n   " +
"                     ustatus.Message = \"Error while cancelling the upload.\";\r\n  " +
"                      ustatus.Exception = response.Message;\r\n                   " +
"     ustatus.UploadId = response.UploadId;\r\n                        ustatus.Lics" +
"Id = response.LicsId;\r\n                        ustatus.IsError = true;\r\n        " +
"                ShowResult(true);\r\n                    }\r\n                    el" +
"se {\r\n                        ustatus.Message = \"Upload successfully cancelled.\"" +
";\r\n                        ustatus.Exception = \"\";\r\n                        Show" +
"Result(true);\r\n                    }\r\n                },\r\n                error:" +
" function (xhr, ajaxOptions, thrownError) {\r\n                    if (doSilentCan" +
"cel)\r\n                        return;\r\n                    ustatus.Message = \"Er" +
"ror communicating with server.\";\r\n                    ustatus.Exception = (isTes" +
"t) ? thrownError : \"\";\r\n                    ustatus.IsError = true;\r\n           " +
"         ShowResult(true);\r\n                }\r\n            });\r\n\r\n            do" +
"Cancel = false;\r\n        }\r\n\r\n        // Called to initiate an upload\r\n        f" +
"unction UploadInitiate() {\r\n            // First, disable the form so that the u" +
"ser can\'t click the button again\r\n            $(\"form :input:not(#cancelUpload)\"" +
").attr(\"disabled\", \"disabled\").trigger(\"liszt:updated\");\r\n\r\n            if (isRe" +
"suming && ustatus.FileName != inProgressFileName) {\r\n                ustatus.Mes" +
"sage = \"Filename does not match. Cannot resume without the same file.\";\r\n       " +
"         ustatus.Exception = \"\";\r\n                ustatus.IsError = true;\r\n     " +
"           ShowResult(true);\r\n                return;\r\n            }\r\n          " +
"  if (isResuming && fileData != null && fileData.size != inProgressFileSize) {\r\n" +
"                ustatus.Message = \"File size does not match original upload. Can" +
"not resume without the same file.\";\r\n                ustatus.Exception = \"\";\r\n  " +
"              ustatus.IsError = true;\r\n                ShowResult(true);\r\n      " +
"          return;\r\n            }\r\n\r\n            // Then, show the progress indic" +
"ator\r\n            $(\"#spanInterface\").text($(\"#ddlInterface option:selected\").te" +
"xt());\r\n            $(\"#spanFilename\").text(ustatus.FileName);\r\n            if (" +
"fileData != null) {\r\n                ustatus.FileSize = fileData.size;\r\n        " +
"        $(\"#spanFilesize\").text(addCommas(parseInt(Math.ceil(parseFloat(ustatus." +
"FileSize)/1024))) + \" kB\");\r\n            }\r\n            $(\"#uploadOptions\").show" +
"();\r\n            $(\"#divResult\").hide();\r\n            $(\"#step1tick\").hide();\r\n " +
"           $(\"#step2tick\").hide();\r\n            $(\"#step3tick\").hide();\r\n       " +
"     $(\"#step4tick\").hide();\r\n            $(\"#step5tick\").hide();\r\n            $" +
"(\"#step4time\").hide();\r\n            $(\"#step5time\").hide();\r\n            $(\".fai" +
"lure\").hide();\r\n            $(\".success\").hide();\r\n            $(\".failureProgre" +
"ss\").removeClass(\"failureProgress\");\r\n            $(\".successProgress\").removeCl" +
"ass(\"successProgress\");\r\n            SetProgressDescription(\"Step 1 - Initialisi" +
"ng upload\");\r\n\r\n            $(\"#dialog\").dialog({\r\n                modal: true,\r" +
"\n                height: \"auto\",\r\n                close: function (event, ui) {\r" +
"\n                    continueMonitoring = false;\r\n                },\r\n          " +
"      buttons: {}\r\n            });\r\n            $(\"#progressbar\").progressbar({\r" +
"\n                value: 0\r\n            });\r\n            \r\n            continueMo" +
"nitoring = true;\r\n\r\n            // Now initiate the upload\r\n            // This " +
"will also confirm that the correct filetype has been selected for the given inte" +
"rface\r\n            if (!isResuming) {\r\n                $.ajax({\r\n               " +
"     type: \"post\",\r\n                    url: \"/Uploads/Start\",\r\n                " +
"    contentType: \"application/json\",\r\n                    data: JSON.stringify({" +
"\r\n                        interfaceCode: ustatus.InterfaceCode,\r\n               " +
"         filename: ustatus.FileName\r\n                    }),\r\n                  " +
"  async: true,\r\n                    success: function (response) {\r\n            " +
"            if (response.Result != \"OK\") {\r\n                            ustatus." +
"IsError = true;\r\n                            ustatus.Message = \"Error starting t" +
"he upload.\";\r\n                            ustatus.Exception = response.Message;\r" +
"\n                            ShowResult(false);\r\n                        }\r\n    " +
"                    else {\r\n                            UploadInitiateCallback()" +
";\r\n                        }\r\n                    },\r\n                    error:" +
" function (xhr, ajaxOptions, thrownError) {\r\n                        ustatus.IsE" +
"rror = true;\r\n                        ustatus.Message = \"Error communicating wit" +
"h server.\";\r\n                        ustatus.Exception = (isTest) ? thrownError " +
": \"\";\r\n                        ShowResult(false);\r\n                    }\r\n      " +
"          });\r\n            }\r\n            else {\r\n                UploadInitiate" +
"Callback();\r\n            }\r\n        }\r\n\r\n        function SetProgressDescription" +
"(description) {\r\n            $(\"#progressText\").text(description);\r\n        }\r\n\r" +
"\n        // Callback function for initiating an upload\r\n        function UploadI" +
"nitiateCallback() {\r\n            ustatus.CurrentStep++;\r\n            $(\"#step1ti" +
"ck\").show();\r\n            SetProgressDescription(\"Step 2 - Uploading data\");\r\n\r\n" +
"            // Next, start uploading the segments.\r\n            // This hs handl" +
"ed differently depending on whether or not the browser supports the necessary HT" +
"ML5 elements.\r\n            // If not, then it has to use ActiveX (which means In" +
"ternet Explorer)\r\n            if (isModernBrowser) {\r\n                var fr = n" +
"ew FileReader();\r\n\r\n                fr.onload = function (e) {\r\n                " +
"    ustatus.Remainder = e.target.result;\r\n                    ustatus.TotalLengt" +
"h = ustatus.Remainder.length;\r\n\r\n                    if (ustatus.TotalLength == " +
"0) {\r\n                        SetNoMoreSegments();\r\n                    }\r\n     " +
"               else {\r\n                        ProcessSegment();\r\n              " +
"      }\r\n                };\r\n\r\n                fr.readAsText(fileData, \"UTF-8\");" +
"\r\n            }\r\n            else if (ActiveXObject) {\r\n                \r\n      " +
"          var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\r\n          " +
"      ustatus.TotalLength = fso.getFile(ustatus.FilePath).size;\r\n               " +
" ustatus.FileSize = ustatus.TotalLength;\r\n                ustatus.File = fso.Ope" +
"nTextFile(ustatus.FilePath, 1, false, -1); // -1 = Unicode\r\n                usta" +
"tus.NeedsEncodingFix = true;\r\n\r\n                if (isResuming && ustatus.FileSi" +
"ze != inProgressFileSize && inProgressFileSize > 0) {\r\n                    ustat" +
"us.File.Close();\r\n                    ustatus.Message = \"File size does not matc" +
"h original upload. Cannot resume without the same file.\";\r\n                    u" +
"status.Exception = \"\";\r\n                    ustatus.IsError = true;\r\n           " +
"         ShowResult(true);\r\n                    return;\r\n                }\r\n\r\n  " +
"              // Now that the file is accessed, the size is available\r\n         " +
"       $(\"#spanFilesize\").text(addCommas(parseInt(Math.ceil(parseFloat(ustatus.T" +
"otalLength)/1024))) + \" kB\");\r\n                \r\n                if (ustatus.Tot" +
"alLength == 0) {\r\n                    ustatus.File.Close();\r\n                   " +
" SetNoMoreSegments();\r\n                }\r\n                else {\r\n              " +
"      ProcessSegment();\r\n                }\r\n            }\r\n        }\r\n\r\n        " +
"// Called to process a file segment. Called iteratively until file is fully proc" +
"essed\r\n        function ProcessSegment()\r\n        {\r\n            if (doCancel) {" +
"\r\n                SetProgressDescription(\"Cancelling upload\");\r\n                " +
"UploadCancel(false);\r\n            }\r\n            else if (isModernBrowser) {\r\n  " +
"              if (ustatus.Remainder.length == 0) {\r\n                    // The u" +
"pload phase is complete, now monitor the progress\r\n                    UploadMon" +
"itor();\r\n                }\r\n                else {\r\n                    while (u" +
"status.Remainder.length > 0) {\r\n                        if (ustatus.Remainder.le" +
"ngth > ustatus.SegmentBytes - ustatus.MaxRowSize - 10) {\r\n                      " +
"      var index = ustatus.SegmentBytes - ustatus.MaxRowSize - 10;\r\n             " +
"               while (index < ustatus.Remainder.length && ustatus.Remainder[inde" +
"x] != \"\\n\") {\r\n                                index++;\r\n                       " +
"         if (index > ustatus.SegmentBytes) {\r\n                                  " +
"  // The line exceeds the maximum line length. Terminate upload process.\r\n      " +
"                              ustatus.IsError = true;\r\n                         " +
"           ustatus.Message = \"End of line not found within maximum line length.\"" +
"\r\n                                    ustatus.Exception = \"Please check line len" +
"gth and end of line encoding in the file.\"\r\n                                    " +
"UploadCancel(true);\r\n                                    ShowResult(false);\r\n   " +
"                                 return;\r\n                                }\r\n   " +
"                         }\r\n                            index++;\r\n              " +
"              segment = ustatus.Remainder.substring(0, index);\r\n                " +
"            ustatus.Remainder = ustatus.Remainder.substr(index);\r\n              " +
"          }\r\n                        else {\r\n                            segment" +
" = ustatus.Remainder;\r\n                            ustatus.Remainder = \"\";\r\n    " +
"                    }\r\n                        ustatus.SegmentCount++;\r\n        " +
"                \r\n                        ustatus.ProcessedLength = ustatus.Tota" +
"lLength - ustatus.Remainder.length;\r\n                        $(\"#progressbar\").p" +
"rogressbar(\"value\", ustatus.ProcessedLength * 100 / ustatus.TotalLength);\r\n\r\n   " +
"                     if (!isResuming || ustatus.SegmentCount > inProgressLastSeg" +
"ment) {\r\n                            UploadSegment(segment, ustatus.Remainder.le" +
"ngth <= 0);\r\n                            return;\r\n                        }\r\n   " +
"                 }\r\n                    // this is for the case where a file is " +
"resumed after the last segment is actually uploaded\r\n                    UploadM" +
"onitor();\r\n                }\r\n            }\r\n            else {\r\n               " +
" if (ustatus.File.AtEndOfStream) {\r\n                    ustatus.File.Close();\r\n\r" +
"\n                    // The upload phase is complete, now monitor the progress\r\n" +
"                    UploadMonitor();\r\n                }\r\n                else {\r" +
"\n                    while (!ustatus.File.AtEndOfStream) {\r\n                    " +
"    var aryData = new Array();\r\n                        var x = 0;\r\n            " +
"            if (ustatus.DanglingChar != \"\") {\r\n                            aryDa" +
"ta[x++] = ustatus.DanglingChar;\r\n                            ustatus.DanglingCha" +
"r = \"\";\r\n                        }\r\n                        aryData[x++] = ustat" +
"us.File.Read(ustatus.SegmentBytes - ustatus.MaxRowSize - 10);\r\n                 " +
"       while (!ustatus.File.AtEndOfStream) {\r\n                            var c " +
"= ustatus.File.Read(1);\r\n                            var code = c.charCodeAt(0);" +
"\r\n                            // It\'s read 16 bits, so have to mask all but the " +
"lower 8 bits to read read ASCII character (10 == newline)\r\n                     " +
"       // There\'s also a possibility that the newline will be in the upper half," +
" so have to shift 8 bits.\r\n                            // But in that case, the " +
"lower byte would need to be preserved for the next segment\r\n                    " +
"        //alert(\"upper: \" + String.fromCharCode(code & 0xFF) + \"(\" + (code & 0xF" +
"F) + \"), lower: \" + String.fromCharCode(code >> 8) + \"(\" + (code >> 8) + \")\")\r\n " +
"                           if ((code & 0xFF) == 10) {\r\n                         " +
"       aryData[x++] = String.fromCharCode((13 << 8) + 10);\r\n                    " +
"            ustatus.DanglingChar = String.fromCharCode((13 << 8) + (code >> 8));" +
"\r\n                                break;\r\n                            }\r\n       " +
"                     if ((code >> 8) == 10) {\r\n                                a" +
"ryData[x++] = c;\r\n                                break;\r\n                      " +
"      }\r\n                            aryData[x++] = c;\r\n\r\n                      " +
"      if (x > (ustatus.MaxRowSize / 2) + 5) {\r\n                                /" +
"/ The line exceeds the maximum line length. Terminate upload process.\r\n         " +
"                       ustatus.File.Close();\r\n                                us" +
"tatus.IsError = true;\r\n                                ustatus.Message = \"End of" +
" line not found within maximum line length.\"\r\n                                us" +
"tatus.Exception = \"Please check line length and end of line encoding in the file" +
".\"\r\n                                UploadCancel(true);\r\n                       " +
"         ShowResult(false);\r\n                                return;\r\n          " +
"                  }\r\n                        }\r\n                        ustatus." +
"SegmentCount++;\r\n\r\n                        var segment = aryData.join(\'\');\r\n    " +
"                    ustatus.ProcessedLength += segment.length;\r\n\r\n              " +
"          // ProcessedLength * 200 percent because the data is read 2 bytes at a" +
" time\r\n                        $(\"#progressbar\").progressbar(\"value\", ustatus.Pr" +
"ocessedLength * 200 / ustatus.TotalLength);\r\n\r\n                        if (!isRe" +
"suming || ustatus.SegmentCount > inProgressLastSegment) {\r\n                     " +
"       UploadSegment(segment, ustatus.File.AtEndOfStream);\r\n                    " +
"        return;\r\n                        }\r\n                    }\r\n\r\n           " +
"         // this is for the case where a file is resumed after the last segment " +
"is actually uploaded\r\n                    ustatus.File.Close();\r\n\r\n             " +
"       // The upload phase is complete, now monitor the progress\r\n              " +
"      UploadMonitor();\r\n                }\r\n            }\r\n        }\r\n\r\n        /" +
"/ Called to upload segment to server\r\n        function UploadSegment(segmentData" +
", isFinalSegment) {\r\n            $.ajax({\r\n                type: \"post\",\r\n      " +
"          url: \"/Uploads/Segment\",\r\n                contentType: \"application/js" +
"on\",\r\n                data: JSON.stringify({\r\n                    interfaceCode:" +
" ustatus.InterfaceCode,\r\n                    filename: ustatus.FileName,\r\n      " +
"              segmentData: segmentData,\r\n                    isFinalSegment: isF" +
"inalSegment,\r\n                    fileSize: ustatus.FileSize,\r\n                 " +
"   needsEncodingFix: ustatus.NeedsEncodingFix\r\n                }),\r\n            " +
"    async: true,\r\n                success: function (response) {\r\n              " +
"      if (response.Result != \"OK\") {\r\n                        ustatus.IsError = " +
"true;\r\n                        ustatus.Message = \"Error while uploading file seg" +
"ment.\"\r\n                        ustatus.Exception = response.Message;\r\n         " +
"               ustatus.UploadId = response.UploadId;\r\n                        us" +
"tatus.LicsId = response.LicsId;\r\n                        ShowResult(false);\r\n   " +
"                 }\r\n                    else {\r\n                        ProcessS" +
"egment();\r\n                    }\r\n                },\r\n                error: fun" +
"ction (xhr, ajaxOptions, thrownError) {\r\n                    ustatus.IsError = t" +
"rue;\r\n                    ustatus.Message = \"Error communicating with server.\";\r" +
"\n                    ustatus.Exception = (isTest) ? thrownError : \"\";\r\n         " +
"           ShowResult(false);\r\n                }\r\n            });\r\n        }\r\n\r\n" +
"        // Called to indicate that there will be no more segments uploaded\r\n    " +
"    // Used only when the uploaded file has a size of 0 bytes\r\n        function " +
"SetNoMoreSegments() {\r\n            $.ajax({\r\n                type: \"post\",\r\n    " +
"            url: \"/Uploads/SetNoMoreSegments\",\r\n                contentType: \"ap" +
"plication/json\",\r\n                data: JSON.stringify({\r\n                    in" +
"terfaceCode: ustatus.InterfaceCode,\r\n                    filename: ustatus.FileN" +
"ame\r\n                }),\r\n                async: true,\r\n                success:" +
" function (response) {\r\n                    if (response.Result != \"OK\") {\r\n    " +
"                    ustatus.IsError = true;\r\n                        ustatus.Mes" +
"sage = \"Error while setting file upload complete.\"\r\n                        usta" +
"tus.Exception = response.Message;\r\n                        ustatus.UploadId = re" +
"sponse.UploadId;\r\n                        ustatus.LicsId = response.LicsId;\r\n   " +
"                     ShowResult(false);\r\n                    }\r\n                " +
"    else {\r\n                        UploadMonitor();\r\n                    }\r\n   " +
"             },\r\n                error: function (xhr, ajaxOptions, thrownError)" +
" {\r\n                    ustatus.IsError = true;\r\n                    ustatus.Mes" +
"sage = \"Error communicating with server.\";\r\n                    ustatus.Exceptio" +
"n = (isTest) ? thrownError : \"\";\r\n                    ShowResult(false);\r\n      " +
"          }\r\n            });\r\n        }\r\n\r\n        // Called to show the result " +
"of an operation\r\n        function ShowResult(useNewDialog) {\r\n            // Re-" +
"enable the form underneath the dialog\r\n            if (!ustatus.IsError) {\r\n    " +
"            $(\"#ddlInterface\").val(\"\").change();\r\n                $(\"#fakefile\")" +
".val(\"\");\r\n                resetFormElement($(\"#file\"));\r\n            }\r\n       " +
"     $(\"form :input\").removeAttr(\"disabled\").trigger(\"liszt:updated\");\r\n        " +
"    \r\n            if (useNewDialog) {\r\n                // Remove any existing pr" +
"ogress bars or dialog windows\r\n                $(\".ui-progressbar\").progressbar(" +
"\"destroy\");\r\n                $(\".ui-dialog-content\").dialog(\"destroy\");\r\n\r\n     " +
"           // Set the message an exception text\r\n                $(\"#pMessage\")." +
"text(ustatus.Message);\r\n                if (ustatus.Exception != \"\") {\r\n        " +
"            $(\"#pException\").text(ustatus.Exception);\r\n                    $(\"#p" +
"Exception\").show();\r\n                }\r\n                else {\r\n                " +
"    $(\"#pException\").hide();\r\n                }\r\n\r\n                // Show the d" +
"ialog\r\n                $(\"#dialogMessage\").dialog({\r\n                    modal: " +
"true,\r\n                    title: (ustatus.IsError) ? \"Error\" : \"Message\",\r\n    " +
"                buttons: {\r\n                        Ok: function() {\r\n          " +
"                  $(this).dialog(\"close\");\r\n                        }\r\n         " +
"           }\r\n                });\r\n            }\r\n            else {\r\n          " +
"      $(\"#divResult\").show();\r\n                $(\"#uploadOptions\").hide();\r\n\r\n  " +
"              $(\"#result\").text(ustatus.Message);\r\n                if (ustatus.E" +
"xception != \"\") {\r\n                    $(\"#pException2\").text(ustatus.Exception)" +
";\r\n                    $(\"#pException2\").show();\r\n                }\r\n           " +
"     else {\r\n                    $(\"#pException2\").hide();\r\n                }\r\n\r" +
"\n                // Show the upload id if available and if in test mode\r\n       " +
"         if (isTest && ustatus.UploadId > 0) {\r\n                    $(\"#rowUploa" +
"dId\").show();\r\n                    $(\"#uploadId\").text(ustatus.UploadId);\r\n     " +
"           }\r\n                else {\r\n                    $(\"#rowUploadId\").hide" +
"();\r\n                }\r\n\r\n                // Show the LICS id if it is available" +
"\r\n                if (ustatus.LicsId > 0) {\r\n                    $(\"#rowLicsId\")" +
".show();\r\n                    $(\"#licsId\").text(ustatus.LicsId);\r\n              " +
"      $(\"#rowInterfaceErrors\").show();\r\n                    $(\"#interfaceErrorCo" +
"unt\").text(ustatus.InterfaceErrorCount);\r\n                    $(\"#rowRowErrors\")" +
".show();\r\n                    $(\"#rowErrorCount\").text(ustatus.RowErrorCount);\r\n" +
"                    $(\"#rowDetails\").show();\r\n                    $(\"#detailsLin" +
"k\").attr(\"href\", \"/Monitor/View/\" + ustatus.LicsId);\r\n                }\r\n       " +
"         else {\r\n                    $(\"#rowLicsId\").hide();\r\n                  " +
"  $(\"#rowInterfaceErrors\").hide();\r\n                    $(\"#rowRowErrors\").hide(" +
");\r\n                    $(\"#rowDetails\").hide();\r\n                }\r\n\r\n         " +
"       $(\"#progressbar\").progressbar(\"value\", 100);\r\n                if (ustatus" +
".IsError) {\r\n                    $(\"#progressbar > div\").addClass(\"failureProgre" +
"ss\");\r\n                    $(\".failure\").show();\r\n                }\r\n           " +
"     else {\r\n                    $(\"#progressbar > div\").addClass(\"successProgre" +
"ss\");\r\n                    $(\".success\").show();\r\n                }\r\n\r\n         " +
"       $(\"#dialog\").dialog({\r\n                    buttons: {\r\n                  " +
"      Ok: function() {\r\n                            $(this).dialog(\"close\");\r\n  " +
"                      }\r\n                    }\r\n                });\r\n           " +
"     $(\"#dialog\").dialog(\"option\", \"position\", \"center\");\r\n            }\r\n      " +
"  }\r\n\r\n        // Called to monitor the status of an ongoing upload after all se" +
"gments have been sent to the server\r\n        function UploadMonitor() {\r\n       " +
"     \r\n            // Poll the status and update the display until it\'s finished" +
"\r\n            \r\n            if (ustatus.IsError || !continueMonitoring)\r\n       " +
"         return;\r\n            \r\n            $(\"#uploadOptions\").hide();\r\n\r\n     " +
"       $.ajax({\r\n                type: \"post\",\r\n                url: \"/Uploads/G" +
"etStatus\",\r\n                contentType: \"application/json\",\r\n                as" +
"ync: true,\r\n                success: function (response) {\r\n                    " +
"if (response.Result != \"OK\") {\r\n                        ustatus.IsError = true;\r" +
"\n                        ustatus.Message = \"Error while monitoring upload ustatu" +
"s.\"\r\n                        ustatus.Exception = response.Message;\r\n            " +
"            ustatus.UploadId = response.UploadId;\r\n                        ustat" +
"us.LicsId = response.LicsId;\r\n                        ShowResult(false);\r\n      " +
"              }\r\n                    else {\r\n\r\n                        ustatus.C" +
"urrentStep = response.CurrentStep;\r\n                        if (response.Total >" +
" 0 && response.Current > 0)\r\n                            $(\"#progressbar\").progr" +
"essbar(\"value\", response.Current * 100 / response.Total);\r\n\r\n                   " +
"     // It can be a long time on \"0\" progress...\r\n                        // To " +
"let the user know that stuff is still happening, if it\'s 0 just increment the pr" +
"ogressbar\r\n                        if (response.Current == 0 && ustatus.CurrentS" +
"tep > 3) {\r\n                            var currentValue = $(\"#progressbar\").pro" +
"gressbar(\"value\");\r\n                            currentValue = (currentValue == " +
"100 || isNaN(currentValue)) ? 0 : currentValue + 5;\r\n                           " +
" $(\"#progressbar\").progressbar(\"value\", currentValue);\r\n                        " +
"}\r\n\r\n                        switch(ustatus.CurrentStep) {\r\n                    " +
"        case 3:\r\n                                $(\"#step2tick\").show();\r\n      " +
"                          SetProgressDescription(\"Step 3 - Completing data uploa" +
"d\");\r\n                                break;\r\n                            case 4" +
":\r\n                                $(\"#step2tick\").show();\r\n                    " +
"            $(\"#step3tick\").show();\r\n                                $(\"#step4ti" +
"me\").show();\r\n                                $(\"#step4time\").text(response.Esti" +
"matedTime);\r\n                                // From here, the user is free to u" +
"pload another file, so re-enable the form\r\n                                $(\"fo" +
"rm :input\").removeAttr(\"disabled\").trigger(\"liszt:updated\");\r\n                  " +
"              SetProgressDescription(\"Step 4 - Uploading to ICS\");\r\n            " +
"                    break;\r\n                            case 5:\r\n               " +
"                 $(\"#step2tick\").show();\r\n                                $(\"#st" +
"ep3tick\").show();\r\n                                $(\"#step4tick\").show();\r\n    " +
"                            $(\"#step4time\").hide();\r\n                           " +
"     $(\"#step5time\").show();\r\n                                $(\"#step5time\").te" +
"xt(response.EstimatedTime);\r\n                                SetProgressDescript" +
"ion(\"Step 5 - Processing in ICS\");\r\n                                break;\r\n    " +
"                        default:\r\n                                $(\"#spanDescri" +
"ption\").text(\"Unknown\");\r\n                                break;\r\n              " +
"          }\r\n\r\n                        if (ustatus.CurrentStep == 5 && response." +
"IsComplete == true) {\r\n                            ustatus.InterfaceErrorCount =" +
" response.InterfaceErrorCount;\r\n                            ustatus.RowErrorCoun" +
"t = response.RowErrorCount;\r\n                            ustatus.LicsId = respon" +
"se.LicsId;\r\n                            ustatus.Exception = \"\";\r\n               " +
"             if (ustatus.InterfaceErrorCount == 0 && ustatus.RowErrorCount == 0)" +
" {\r\n                                SetProgressDescription(\"File Load Completed " +
"Successfully\");\r\n                                ustatus.Message = \"Success.\"\r\n " +
"                               ustatus.IsError = false;\r\n                       " +
"     }\r\n                            else {\r\n                                SetP" +
"rogressDescription(\"File Load Complete – with Errors\");\r\n                       " +
"         ustatus.Message = \"Data Errors.\"\r\n                                ustat" +
"us.IsError = true;\r\n                            }\r\n                            $" +
"(\"#step5time\").hide();\r\n                            $(\"#step5tick\").show();\r\n   " +
"                         ShowResult(false);\r\n                        }\r\n        " +
"                else {\r\n                            // Wait a second before poll" +
"ing again\r\n                            if (continueMonitoring)\r\n                " +
"                setTimeout(\"UploadMonitor();\", 1000);\r\n                        }" +
"\r\n                    }\r\n                },\r\n                error: function (xh" +
"r, ajaxOptions, thrownError) {\r\n                    ustatus.IsError = true;\r\n   " +
"                 ustatus.Message = \"Error communicating with server.\";\r\n        " +
"            ustatus.Exception = (isTest) ? thrownError : \"\";\r\n                  " +
"  ShowResult(false);\r\n                }\r\n            });\r\n        }\r\n\r\n    </scr" +
"ipt>\r\n");

});

WriteLiteral("\r\n<form");

WriteLiteral(" id=\"validationForm\"");

WriteLiteral(" action=\"Index\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"main upload\"");

WriteLiteral(">\r\n        <table");

WriteLiteral(" cellspacing=\"12\"");

WriteLiteral(">\r\n            <tr>\r\n                <td");

WriteLiteral(" style=\"width:120px;\"");

WriteLiteral("><label");

WriteLiteral(" for=\"ddlInterfaceGroup\"");

WriteLiteral(">Interface Group</label></td>\r\n                <td");

WriteLiteral(" style=\"width:480px;\"");

WriteLiteral(">");

            
            #line 738 "..\..\Views\Uploads\Index.cshtml"
                                    Write(Html.DropDownList("ddlInterfaceGroup", Model.InterfaceGroups, new { id = "ddlInterfaceGroup", style = "width:467px" }));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td></td>\r\n            </tr>\r\n            <tr>\r\n          " +
"      <td><label");

WriteLiteral(" for=\"ddlInterface\"");

WriteLiteral(">Interface</label></td>\r\n                <td>");

            
            #line 743 "..\..\Views\Uploads\Index.cshtml"
               Write(Html.DropDownList("ddlInterface", Model.Interfaces, new { id = "ddlInterface", @class = "validate[required]", style = "width:467px" }));

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                <td");

WriteLiteral(" id=\"tdFileType\"");

WriteLiteral("></td>\r\n            </tr>\r\n            <tr>\r\n                <td><label");

WriteLiteral(" for=\"fakefile\"");

WriteLiteral(">File</label></td>\r\n                <td>\r\n                    <input");

WriteLiteral(" id=\"fakefile\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" /> <button");

WriteLiteral(" id=\"fakefileButton\"");

WriteLiteral(">Browse...</button>\r\n                    <div");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral("><input");

WriteLiteral(" type=\"file\"");

WriteLiteral(" id=\"file\"");

WriteLiteral(" class=\"validate[required]\"");

WriteLiteral(" /></div>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n " +
"           <tr>\r\n                <td></td>\r\n                <td><button");

WriteLiteral(" id=\"upload\"");

WriteLiteral(">Upload</button></td>\r\n                <td></td>\r\n            </tr>\r\n        </ta" +
"ble>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div");

WriteLiteral(" id=\"dialog\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n            <table");

WriteLiteral(" cellspacing=\"6\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n                <tr>\r\n                    <td");

WriteLiteral(" style=\"width:100px;\"");

WriteLiteral(">Connection</td>\r\n                    <td><strong>");

            
            #line 767 "..\..\Views\Uploads\Index.cshtml"
                            Write((ViewBag.Connection == null) ? string.Empty : ViewBag.Connection.ConnectionName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n                    <td");

WriteLiteral(" style=\"width:50px;\"");

WriteLiteral("></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Inte" +
"rface</td>\r\n                    <td><strong><span");

WriteLiteral(" id=\"spanInterface\"");

WriteLiteral("></span></strong></td>\r\n                    <td></td>\r\n                </tr>\r\n   " +
"             <tr>\r\n                    <td>ICS User</td>\r\n                    <t" +
"d><strong>");

            
            #line 777 "..\..\Views\Uploads\Index.cshtml"
                            Write((ViewBag.User == null) ? string.Empty : ViewBag.User.UserName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n                    <td></td>\r\n                </tr>\r\n           " +
"     <tr>\r\n                    <td>Filename</td>\r\n                    <td><stron" +
"g><span");

WriteLiteral(" id=\"spanFilename\"");

WriteLiteral("></span></strong></td>\r\n                    <td></td>\r\n                </tr>\r\n   " +
"             <tr>\r\n                    <td>Filesize</td>\r\n                    <t" +
"d><strong><span");

WriteLiteral(" id=\"spanFilesize\"");

WriteLiteral("></span></strong></td>\r\n                    <td></td>\r\n                </tr>\r\n   " +
"             <tr>\r\n                    <td>Step 1</td>\r\n                    <td>" +
"<strong>Initialising upload</strong></td>\r\n                    <td><div");

WriteLiteral(" id=\"step1tick\"");

WriteLiteral(" class=\"tick\"");

WriteLiteral("></div></td>\r\n                </tr>\r\n                <tr>\r\n                    <t" +
"d>Step 2</td>\r\n                    <td><strong>Uploading data</strong></td>\r\n   " +
"                 <td><div");

WriteLiteral(" id=\"step2tick\"");

WriteLiteral(" class=\"tick\"");

WriteLiteral("></div></td>\r\n                </tr>\r\n                <tr>\r\n                    <t" +
"d>Step 3</td>\r\n                    <td><strong>Completing data upload</strong></" +
"td>\r\n                    <td><div");

WriteLiteral(" id=\"step3tick\"");

WriteLiteral(" class=\"tick\"");

WriteLiteral("></div></td>\r\n                </tr>\r\n                <tr>\r\n                    <t" +
"d>Step 4</td>\r\n                    <td><strong>Uploading to ICS</strong></td>\r\n " +
"                   <td><div");

WriteLiteral(" id=\"step4tick\"");

WriteLiteral(" class=\"tick\"");

WriteLiteral("></div><div");

WriteLiteral(" id=\"step4time\"");

WriteLiteral("></div></td>\r\n                </tr>\r\n                <tr>\r\n                    <t" +
"d>Step 5</td>\r\n                    <td><strong>Processing in ICS</strong></td>\r\n" +
"                    <td><div");

WriteLiteral(" id=\"step5tick\"");

WriteLiteral(" class=\"tick\"");

WriteLiteral("></div><div");

WriteLiteral(" id=\"step5time\"");

WriteLiteral("></div></td>\r\n                </tr>\r\n            </table>\r\n            <br />\r\n  " +
"          <div");

WriteLiteral(" id=\"progress\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" id=\"progressbar\"");

WriteLiteral("></div>\r\n                <div");

WriteLiteral(" id=\"progressText\"");

WriteLiteral("></div>\r\n                <br />\r\n            </div>\r\n            <center");

WriteLiteral(" id=\"uploadOptions\"");

WriteLiteral(">\r\n                <button");

WriteLiteral(" id=\"cancelUpload\"");

WriteLiteral(">Cancel</button>\r\n            </center>\r\n            <div");

WriteLiteral(" id=\"divResult\"");

WriteLiteral(">\r\n                <table");

WriteLiteral(" cellspacing=\"6\"");

WriteLiteral(" style=\"width:100%;\"");

WriteLiteral(">\r\n                    <tr>\r\n                        <td><strong");

WriteLiteral(" id=\"result\"");

WriteLiteral("></strong></td>\r\n                        <td");

WriteLiteral(" style=\"width:50px;\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"success\"");

WriteLiteral("></div>\r\n                            <div");

WriteLiteral(" class=\"failure\"");

WriteLiteral("></div>\r\n                        </td>\r\n                    </tr>\r\n              " +
"      <tr>\r\n                        <td");

WriteLiteral(" colspan=\"2\"");

WriteLiteral("><p");

WriteLiteral(" id=\"pException2\"");

WriteLiteral("></p></td>\r\n                    </tr>\r\n                </table>\r\n                " +
"<table");

WriteLiteral(" cellspacing=\"6\"");

WriteLiteral(">\r\n                    <tr");

WriteLiteral(" id=\"rowUploadId\"");

WriteLiteral(">\r\n                        <td><strong>Upload ID</strong>:</td>\r\n                " +
"        <td");

WriteLiteral(" id=\"uploadId\"");

WriteLiteral("></td>\r\n                    </tr>\r\n                    <tr");

WriteLiteral(" id=\"rowLicsId\"");

WriteLiteral(">\r\n                        <td><strong>Interface ID</strong>:</td>\r\n             " +
"           <td");

WriteLiteral(" id=\"licsId\"");

WriteLiteral("></td>\r\n                    </tr>\r\n                    <tr");

WriteLiteral(" id=\"rowInterfaceErrors\"");

WriteLiteral(">\r\n                        <td><strong>Interface Errors</strong>:</td>\r\n         " +
"               <td");

WriteLiteral(" id=\"interfaceErrorCount\"");

WriteLiteral("></td>\r\n                    </tr>\r\n                    <tr");

WriteLiteral(" id=\"rowRowErrors\"");

WriteLiteral(">\r\n                        <td><strong>Row Errors</strong>:</td>\r\n               " +
"         <td");

WriteLiteral(" id=\"rowErrorCount\"");

WriteLiteral("></td>\r\n                    </tr>\r\n                    <tr");

WriteLiteral(" id=\"rowDetails\"");

WriteLiteral(">\r\n                        <td><strong>Details</strong>:</td>\r\n                  " +
"      <td><a");

WriteLiteral(" id=\"detailsLink\"");

WriteLiteral(">See interface details</a></td>\r\n                    </tr>\r\n                </tab" +
"le>\r\n            </div>\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"dialogResume\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n            <p>There is already an upload in progress for you on this connecti" +
"on:</p>\r\n            <table");

WriteLiteral(" cellspacing=\"8\"");

WriteLiteral(">\r\n                <tr>\r\n                    <td");

WriteLiteral(" style=\"width:100px;\"");

WriteLiteral(">Connection</td>\r\n                    <td><strong>");

            
            #line 867 "..\..\Views\Uploads\Index.cshtml"
                            Write((ViewBag.Connection == null) ? string.Empty : ViewBag.Connection.ConnectionName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n                </tr>\r\n                <tr>\r\n                    " +
"<td>Interface</td>\r\n                    <td><strong>");

            
            #line 871 "..\..\Views\Uploads\Index.cshtml"
                           Write(Model.InterfaceName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n                </tr>\r\n                <tr>\r\n                    " +
"<td>ICS User</td>\r\n                    <td><strong>");

            
            #line 875 "..\..\Views\Uploads\Index.cshtml"
                            Write((ViewBag.User == null) ? string.Empty : ViewBag.User.UserName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n                </tr>\r\n                <tr>\r\n                    " +
"<td>Filename</td>\r\n                    <td><strong>");

            
            #line 879 "..\..\Views\Uploads\Index.cshtml"
                           Write(Model.FileName);

            
            #line default
            #line hidden
WriteLiteral("</strong></td>\r\n                </tr>\r\n                <tr");

WriteLiteral(" id=\"rowDescriptionResume\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(@">
                    <td>Description</td>
                    <td><strong><span>Cancelling upload</span></strong></td>
                </tr>
            </table>
            <p>To resume this upload, you must select the same file and the file must be unchanged.</p>
            <center");

WriteLiteral(" id=\"resumeOptions\"");

WriteLiteral(">\r\n                <button");

WriteLiteral(" id=\"resume\"");

WriteLiteral(">Resume</button>\r\n                &nbsp;\r\n                &nbsp;\r\n               " +
" <button");

WriteLiteral(" id=\"cancel\"");

WriteLiteral(">Cancel</button>\r\n            </center>\r\n        </div>\r\n        <div");

WriteLiteral(" id=\"dialogMessage\"");

WriteLiteral(" style=\"display:none;\"");

WriteLiteral(">\r\n            <strong><p");

WriteLiteral(" id=\"pMessage\"");

WriteLiteral("></p></strong>\r\n            <p");

WriteLiteral(" id=\"pException\"");

WriteLiteral("></p>\r\n        </div>\r\n    </div>\r\n</form>\r\n<br />\r\n");

        }
    }
}
#pragma warning restore 1591
